name: Sync and Build Immich Images

on:
  schedule:
    - cron: '0 * * * *' # Runs every hour
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  sync-and-build:
    runs-on: ubuntu-latest
    env:
      GHCR_REPO: ghcr.io/${{ github.repository_owner }}
    steps:
      - name: Checkout target repo
        uses: actions/checkout@v4
        with:
          ref: dockerimageML

      - name: Get latest release tag from source repo
        id: get_release
        run: |
          latest_tag=$(curl -s https://api.github.com/repos/immich-app/immich/releases/latest | jq -r .tag_name)
          echo "::set-output name=latest_tag::$latest_tag"
        shell: bash

      - name: Check if latest release already exists in this branch
        id: check_existing
        run: |
          if git ls-remote --exit-code --heads origin dockerimageML | grep -q "${{ steps.get_release.outputs.latest_tag }}"; then
            echo "exists=true" >> $GITHUB_ENV
          else
            echo "exists=false" >> $GITHUB_ENV

      - name: Clone latest release from upstream if new
        if: env.exists == 'false'
        run: |
          git clone --depth 1 --branch "${{ steps.get_release.outputs.latest_tag }}" https://github.com/immich-app/immich temp-clone
          rsync -a --delete temp-clone/ ./
          rm -rf temp-clone
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add .
          git commit -m "Sync immich release ${{ steps.get_release.outputs.latest_tag }}"
          git push origin HEAD:dockerimageML

      - name: Log in to GHCR
        if: env.exists == 'false'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Set up Docker Buildx
        if: env.exists == 'false'
        uses: docker/setup-buildx-action@v3

      - name: Build and push server image
        if: env.exists == 'false'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: server/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/immich-server:pr-${{ steps.get_release.outputs.latest_tag }}

      - name: Build and push ML images
        if: env.exists == 'false'
        strategy:
          matrix:
            include:
              - device: cpu
                suffix: ""
                dockerfile: machine-learning/Dockerfile
              - device: cuda
                suffix: "-cuda"
                dockerfile: machine-learning/Dockerfile
        uses: docker/build-push-action@v6
        with:
          context: machine-learning
          file: ${{ matrix.dockerfile }}
          platforms: linux/amd64
          push: true
          build-args: |
            DEVICE=${{ matrix.device }}
          tags: ghcr.io/${{ github.repository_owner }}/immich-machine-learning:pr-${{ steps.get_release.outputs.latest_tag }}${{ matrix.suffix }}
