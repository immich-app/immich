{
  "openapi": "3.0.0",
  "paths": {
    "/activities": {
      "get": {
        "operationId": "getActivities",
        "parameters": [
          {
            "name": "albumId",
            "required": true,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "assetId",
            "required": true,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "level",
            "required": true,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ReactionLevel"
            }
          },
          {
            "name": "type",
            "required": true,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ReactionType"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Activities"
        ],
        "x-immich-permission": "activity.read",
        "description": "This endpoint requires the `activity.read` permission."
      },
      "post": {
        "operationId": "createActivity",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityCreateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Activities"
        ],
        "x-immich-permission": "activity.create",
        "description": "This endpoint requires the `activity.create` permission."
      }
    },
    "/activities/statistics": {
      "get": {
        "operationId": "getActivityStatistics",
        "parameters": [
          {
            "name": "albumId",
            "required": true,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "assetId",
            "required": true,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Activities"
        ],
        "x-immich-permission": "activity.statistics",
        "description": "This endpoint requires the `activity.statistics` permission."
      }
    },
    "/activities/{id}": {
      "delete": {
        "operationId": "deleteActivity",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Activities"
        ],
        "x-immich-permission": "activity.delete",
        "description": "This endpoint requires the `activity.delete` permission."
      }
    },
    "/admin/auth/unlink-all": {
      "post": {
        "operationId": "unlinkAllOAuthAccountsAdmin",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Auth (admin)"
        ],
        "x-immich-admin-only": true,
        "x-immich-permission": "adminAuth.unlinkAll",
        "description": "This endpoint is an admin-only route, and requires the `adminAuth.unlinkAll` permission."
      }
    },
    "/admin/notifications": {
      "post": {
        "operationId": "createNotification",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationCreateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Notifications (Admin)"
        ],
        "x-immich-admin-only": true
      }
    },
    "/admin/notifications/templates/{name}": {
      "post": {
        "operationId": "getNotificationTemplateAdmin",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Notifications (Admin)"
        ],
        "x-immich-admin-only": true
      }
    },
    "/admin/notifications/test-email": {
      "post": {
        "operationId": "sendTestEmailAdmin",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemConfigSmtpDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Notifications (Admin)"
        ],
        "x-immich-admin-only": true
      }
    },
    "/admin/users": {
      "get": {
        "operationId": "searchUsersAdmin",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "withDeleted",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Users (admin)"
        ],
        "x-immich-admin-only": true,
        "x-immich-permission": "adminUser.read",
        "description": "This endpoint is an admin-only route, and requires the `adminUser.read` permission."
      },
      "post": {
        "operationId": "createUserAdmin",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAdminCreateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Users (admin)"
        ],
        "x-immich-admin-only": true,
        "x-immich-permission": "adminUser.create",
        "description": "This endpoint is an admin-only route, and requires the `adminUser.create` permission."
      }
    },
    "/admin/users/{id}": {
      "delete": {
        "operationId": "deleteUserAdmin",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAdminDeleteDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Users (admin)"
        ],
        "x-immich-admin-only": true,
        "x-immich-permission": "adminUser.delete",
        "description": "This endpoint is an admin-only route, and requires the `adminUser.delete` permission."
      },
      "get": {
        "operationId": "getUserAdmin",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Users (admin)"
        ],
        "x-immich-admin-only": true,
        "x-immich-permission": "adminUser.read",
        "description": "This endpoint is an admin-only route, and requires the `adminUser.read` permission."
      },
      "put": {
        "operationId": "updateUserAdmin",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAdminUpdateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Users (admin)"
        ],
        "x-immich-admin-only": true,
        "x-immich-permission": "adminUser.update",
        "description": "This endpoint is an admin-only route, and requires the `adminUser.update` permission."
      }
    },
    "/admin/users/{id}/preferences": {
      "get": {
        "operationId": "getUserPreferencesAdmin",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Users (admin)"
        ],
        "x-immich-admin-only": true,
        "x-immich-permission": "adminUser.read",
        "description": "This endpoint is an admin-only route, and requires the `adminUser.read` permission."
      },
      "put": {
        "operationId": "updateUserPreferencesAdmin",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPreferencesUpdateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Users (admin)"
        ],
        "x-immich-admin-only": true,
        "x-immich-permission": "adminUser.update",
        "description": "This endpoint is an admin-only route, and requires the `adminUser.update` permission."
      }
    },
    "/admin/users/{id}/restore": {
      "post": {
        "operationId": "restoreUserAdmin",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Users (admin)"
        ],
        "x-immich-admin-only": true,
        "x-immich-permission": "adminUser.delete",
        "description": "This endpoint is an admin-only route, and requires the `adminUser.delete` permission."
      }
    },
    "/admin/users/{id}/statistics": {
      "get": {
        "operationId": "getUserStatisticsAdmin",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "isFavorite",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isTrashed",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "visibility",
            "required": true,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/AssetVisibility"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Users (admin)"
        ],
        "x-immich-admin-only": true,
        "x-immich-permission": "adminUser.read",
        "description": "This endpoint is an admin-only route, and requires the `adminUser.read` permission."
      }
    },
    "/albums": {
      "get": {
        "operationId": "getAllAlbums",
        "parameters": [
          {
            "name": "assetId",
            "required": true,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "shared",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Albums"
        ],
        "x-immich-permission": "album.read",
        "description": "This endpoint requires the `album.read` permission."
      },
      "post": {
        "operationId": "createAlbum",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAlbumDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Albums"
        ],
        "x-immich-permission": "album.create",
        "description": "This endpoint requires the `album.create` permission."
      }
    },
    "/albums/assets": {
      "put": {
        "operationId": "addAssetsToAlbums",
        "parameters": [
          {
            "name": "key",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slug",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlbumsAddAssetsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Albums"
        ],
        "x-immich-permission": "albumAsset.create",
        "description": "This endpoint requires the `albumAsset.create` permission."
      }
    },
    "/albums/statistics": {
      "get": {
        "operationId": "getAlbumStatistics",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Albums"
        ],
        "x-immich-permission": "album.statistics",
        "description": "This endpoint requires the `album.statistics` permission."
      }
    },
    "/albums/{id}": {
      "delete": {
        "operationId": "deleteAlbum",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Albums"
        ],
        "x-immich-permission": "album.delete",
        "description": "This endpoint requires the `album.delete` permission."
      },
      "get": {
        "operationId": "getAlbumInfo",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "key",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slug",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "withoutAssets",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Albums"
        ],
        "x-immich-permission": "album.read",
        "description": "This endpoint requires the `album.read` permission."
      },
      "patch": {
        "operationId": "updateAlbumInfo",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAlbumDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Albums"
        ],
        "x-immich-permission": "album.update",
        "description": "This endpoint requires the `album.update` permission."
      }
    },
    "/albums/{id}/assets": {
      "delete": {
        "operationId": "removeAssetFromAlbum",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkIdsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Albums"
        ],
        "x-immich-permission": "albumAsset.delete",
        "description": "This endpoint requires the `albumAsset.delete` permission."
      },
      "put": {
        "operationId": "addAssetsToAlbum",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "key",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slug",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkIdsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Albums"
        ],
        "x-immich-permission": "albumAsset.create",
        "description": "This endpoint requires the `albumAsset.create` permission."
      }
    },
    "/albums/{id}/user/{userId}": {
      "delete": {
        "operationId": "removeUserFromAlbum",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Albums"
        ],
        "x-immich-permission": "albumUser.delete",
        "description": "This endpoint requires the `albumUser.delete` permission."
      },
      "put": {
        "operationId": "updateAlbumUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAlbumUserDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Albums"
        ],
        "x-immich-permission": "albumUser.update",
        "description": "This endpoint requires the `albumUser.update` permission."
      }
    },
    "/albums/{id}/users": {
      "put": {
        "operationId": "addUsersToAlbum",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddUsersDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Albums"
        ],
        "x-immich-permission": "albumUser.create",
        "description": "This endpoint requires the `albumUser.create` permission."
      }
    },
    "/api-keys": {
      "get": {
        "operationId": "getApiKeys",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "API Keys"
        ],
        "x-immich-permission": "apiKey.read",
        "description": "This endpoint requires the `apiKey.read` permission."
      },
      "post": {
        "operationId": "createApiKey",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/APIKeyCreateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "API Keys"
        ],
        "x-immich-permission": "apiKey.create",
        "description": "This endpoint requires the `apiKey.create` permission."
      }
    },
    "/api-keys/me": {
      "get": {
        "operationId": "getMyApiKey",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "API Keys"
        ]
      }
    },
    "/api-keys/{id}": {
      "delete": {
        "operationId": "deleteApiKey",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "API Keys"
        ],
        "x-immich-permission": "apiKey.delete",
        "description": "This endpoint requires the `apiKey.delete` permission."
      },
      "get": {
        "operationId": "getApiKey",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "API Keys"
        ],
        "x-immich-permission": "apiKey.read",
        "description": "This endpoint requires the `apiKey.read` permission."
      },
      "put": {
        "operationId": "updateApiKey",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/APIKeyUpdateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "API Keys"
        ],
        "x-immich-permission": "apiKey.update",
        "description": "This endpoint requires the `apiKey.update` permission."
      }
    },
    "/assets": {
      "delete": {
        "operationId": "deleteAssets",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetBulkDeleteDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Assets"
        ],
        "x-immich-permission": "asset.delete",
        "description": "This endpoint requires the `asset.delete` permission."
      },
      "post": {
        "operationId": "uploadAsset",
        "parameters": [
          {
            "name": "key",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slug",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-immich-checksum",
            "in": "header",
            "description": "sha1 checksum that can be used for duplicate detection before the file is uploaded",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AssetMediaCreateDto"
              }
            }
          },
          "description": "Asset Upload Information",
          "required": true
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Assets"
        ],
        "x-immich-permission": "asset.upload",
        "description": "This endpoint requires the `asset.upload` permission."
      },
      "put": {
        "operationId": "updateAssets",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetBulkUpdateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Assets"
        ],
        "x-immich-permission": "asset.update",
        "description": "This endpoint requires the `asset.update` permission."
      }
    },
    "/assets/bulk-upload-check": {
      "post": {
        "description": "Checks if assets exist by checksums. This endpoint requires the `asset.upload` permission.",
        "operationId": "checkBulkUpload",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetBulkUploadCheckDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "summary": "checkBulkUpload",
        "tags": [
          "Assets"
        ],
        "x-immich-permission": "asset.upload"
      }
    },
    "/assets/device/{deviceId}": {
      "get": {
        "description": "Get all asset of a device that are in the database, ID only.",
        "operationId": "getAllUserAssetsByDeviceId",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "summary": "getAllUserAssetsByDeviceId",
        "tags": [
          "Assets"
        ]
      }
    },
    "/assets/exist": {
      "post": {
        "description": "Checks if multiple assets exist on the server and returns all existing - used by background backup",
        "operationId": "checkExistingAssets",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckExistingAssetsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "summary": "checkExistingAssets",
        "tags": [
          "Assets"
        ]
      }
    },
    "/assets/jobs": {
      "post": {
        "operationId": "runAssetJobs",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetJobsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Assets"
        ]
      }
    },
    "/assets/random": {
      "get": {
        "deprecated": true,
        "description": "This property was deprecated in v1.116.0. This endpoint requires the `asset.read` permission.",
        "operationId": "getRandom",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Assets",
          "Deprecated"
        ],
        "x-immich-lifecycle": {
          "deprecatedAt": "v1.116.0"
        },
        "x-immich-permission": "asset.read"
      }
    },
    "/assets/statistics": {
      "get": {
        "operationId": "getAssetStatistics",
        "parameters": [
          {
            "name": "isFavorite",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isTrashed",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "visibility",
            "required": true,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/AssetVisibility"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Assets"
        ],
        "x-immich-permission": "asset.statistics",
        "description": "This endpoint requires the `asset.statistics` permission."
      }
    },
    "/assets/{id}": {
      "get": {
        "operationId": "getAssetInfo",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "key",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slug",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Assets"
        ],
        "x-immich-permission": "asset.read",
        "description": "This endpoint requires the `asset.read` permission."
      },
      "put": {
        "operationId": "updateAsset",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAssetDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Assets"
        ],
        "x-immich-permission": "asset.update",
        "description": "This endpoint requires the `asset.update` permission."
      }
    },
    "/assets/{id}/metadata": {
      "get": {
        "operationId": "getAssetMetadata",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Assets"
        ],
        "x-immich-permission": "asset.read",
        "description": "This endpoint requires the `asset.read` permission."
      },
      "put": {
        "operationId": "updateAssetMetadata",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetMetadataUpsertDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Assets"
        ],
        "x-immich-permission": "asset.update",
        "description": "This endpoint requires the `asset.update` permission."
      }
    },
    "/assets/{id}/metadata/{key}": {
      "delete": {
        "operationId": "deleteAssetMetadata",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "key",
            "required": true,
            "in": "path",
            "schema": {
              "$ref": "#/components/schemas/AssetMetadataKey"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Assets"
        ],
        "x-immich-permission": "asset.update",
        "description": "This endpoint requires the `asset.update` permission."
      },
      "get": {
        "operationId": "getAssetMetadataByKey",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "key",
            "required": true,
            "in": "path",
            "schema": {
              "$ref": "#/components/schemas/AssetMetadataKey"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Assets"
        ],
        "x-immich-permission": "asset.read",
        "description": "This endpoint requires the `asset.read` permission."
      }
    },
    "/assets/{id}/original": {
      "get": {
        "operationId": "downloadAsset",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "key",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slug",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Assets"
        ],
        "x-immich-permission": "asset.download",
        "description": "This endpoint requires the `asset.download` permission."
      },
      "put": {
        "deprecated": true,
        "description": "This property was deprecated in v1.142.0. Replace the asset with new file, without changing its id. This endpoint requires the `asset.replace` permission.",
        "operationId": "replaceAsset",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "key",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slug",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AssetMediaReplaceDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "summary": "replaceAsset",
        "tags": [
          "Assets",
          "Deprecated"
        ],
        "x-immich-lifecycle": {
          "addedAt": "v1.106.0",
          "deprecatedAt": "v1.142.0"
        },
        "x-immich-permission": "asset.replace"
      }
    },
    "/assets/{id}/thumbnail": {
      "get": {
        "operationId": "viewAsset",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "key",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "required": true,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/AssetMediaSize"
            }
          },
          {
            "name": "slug",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Assets"
        ],
        "x-immich-permission": "asset.view",
        "description": "This endpoint requires the `asset.view` permission."
      }
    },
    "/assets/{id}/video/playback": {
      "get": {
        "operationId": "playAssetVideo",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "key",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slug",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Assets"
        ],
        "x-immich-permission": "asset.view",
        "description": "This endpoint requires the `asset.view` permission."
      }
    },
    "/assets/{id}/video/playback/hls": {
      "get": {
        "operationId": "streamAssetVideo",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "key",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slug",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Assets"
        ]
      }
    },
    "/auth/admin-sign-up": {
      "post": {
        "operationId": "signUpAdmin",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/change-password": {
      "post": {
        "operationId": "changePassword",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Authentication"
        ],
        "x-immich-permission": "auth.changePassword",
        "description": "This endpoint requires the `auth.changePassword` permission."
      }
    },
    "/auth/login": {
      "post": {
        "operationId": "login",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginCredentialDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/logout": {
      "post": {
        "operationId": "logout",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/pin-code": {
      "delete": {
        "operationId": "resetPinCode",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PinCodeResetDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Authentication"
        ],
        "x-immich-permission": "pinCode.delete",
        "description": "This endpoint requires the `pinCode.delete` permission."
      },
      "post": {
        "operationId": "setupPinCode",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PinCodeSetupDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Authentication"
        ],
        "x-immich-permission": "pinCode.create",
        "description": "This endpoint requires the `pinCode.create` permission."
      },
      "put": {
        "operationId": "changePinCode",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PinCodeChangeDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Authentication"
        ],
        "x-immich-permission": "pinCode.update",
        "description": "This endpoint requires the `pinCode.update` permission."
      }
    },
    "/auth/session/lock": {
      "post": {
        "operationId": "lockAuthSession",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/session/unlock": {
      "post": {
        "operationId": "unlockAuthSession",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionUnlockDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/status": {
      "get": {
        "operationId": "getAuthStatus",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/validateToken": {
      "post": {
        "operationId": "validateAccessToken",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Authentication"
        ]
      }
    },
    "/download/archive": {
      "post": {
        "operationId": "downloadArchive",
        "parameters": [
          {
            "name": "key",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slug",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetIdsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Download"
        ],
        "x-immich-permission": "asset.download",
        "description": "This endpoint requires the `asset.download` permission."
      }
    },
    "/download/info": {
      "post": {
        "operationId": "getDownloadInfo",
        "parameters": [
          {
            "name": "key",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slug",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DownloadInfoDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Download"
        ],
        "x-immich-permission": "asset.download",
        "description": "This endpoint requires the `asset.download` permission."
      }
    },
    "/duplicates": {
      "delete": {
        "operationId": "deleteDuplicates",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkIdsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Duplicates"
        ],
        "x-immich-permission": "duplicate.delete",
        "description": "This endpoint requires the `duplicate.delete` permission."
      },
      "get": {
        "operationId": "getAssetDuplicates",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Duplicates"
        ],
        "x-immich-permission": "duplicate.read",
        "description": "This endpoint requires the `duplicate.read` permission."
      }
    },
    "/duplicates/{id}": {
      "delete": {
        "operationId": "deleteDuplicate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Duplicates"
        ],
        "x-immich-permission": "duplicate.delete",
        "description": "This endpoint requires the `duplicate.delete` permission."
      }
    },
    "/faces": {
      "get": {
        "operationId": "getFaces",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Faces"
        ],
        "x-immich-permission": "face.read",
        "description": "This endpoint requires the `face.read` permission."
      },
      "post": {
        "operationId": "createFace",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetFaceCreateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Faces"
        ],
        "x-immich-permission": "face.create",
        "description": "This endpoint requires the `face.create` permission."
      }
    },
    "/faces/{id}": {
      "delete": {
        "operationId": "deleteFace",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetFaceDeleteDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Faces"
        ],
        "x-immich-permission": "face.delete",
        "description": "This endpoint requires the `face.delete` permission."
      },
      "put": {
        "operationId": "reassignFacesById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FaceDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Faces"
        ],
        "x-immich-permission": "face.update",
        "description": "This endpoint requires the `face.update` permission."
      }
    },
    "/jobs": {
      "get": {
        "operationId": "getAllJobsStatus",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Jobs"
        ],
        "x-immich-admin-only": true,
        "x-immich-permission": "job.read",
        "description": "This endpoint is an admin-only route, and requires the `job.read` permission."
      },
      "post": {
        "operationId": "createJob",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobCreateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Jobs"
        ],
        "x-immich-admin-only": true,
        "x-immich-permission": "job.create",
        "description": "This endpoint is an admin-only route, and requires the `job.create` permission."
      }
    },
    "/jobs/{id}": {
      "put": {
        "operationId": "sendJobCommand",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "$ref": "#/components/schemas/JobName"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobCommandDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Jobs"
        ],
        "x-immich-admin-only": true,
        "x-immich-permission": "job.create",
        "description": "This endpoint is an admin-only route, and requires the `job.create` permission."
      }
    },
    "/libraries": {
      "get": {
        "operationId": "getAllLibraries",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Libraries"
        ],
        "x-immich-admin-only": true,
        "x-immich-permission": "library.read",
        "description": "This endpoint is an admin-only route, and requires the `library.read` permission."
      },
      "post": {
        "operationId": "createLibrary",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLibraryDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Libraries"
        ],
        "x-immich-admin-only": true,
        "x-immich-permission": "library.create",
        "description": "This endpoint is an admin-only route, and requires the `library.create` permission."
      }
    },
    "/libraries/{id}": {
      "delete": {
        "operationId": "deleteLibrary",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Libraries"
        ],
        "x-immich-admin-only": true,
        "x-immich-permission": "library.delete",
        "description": "This endpoint is an admin-only route, and requires the `library.delete` permission."
      },
      "get": {
        "operationId": "getLibrary",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Libraries"
        ],
        "x-immich-admin-only": true,
        "x-immich-permission": "library.read",
        "description": "This endpoint is an admin-only route, and requires the `library.read` permission."
      },
      "put": {
        "operationId": "updateLibrary",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLibraryDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Libraries"
        ],
        "x-immich-admin-only": true,
        "x-immich-permission": "library.update",
        "description": "This endpoint is an admin-only route, and requires the `library.update` permission."
      }
    },
    "/libraries/{id}/scan": {
      "post": {
        "operationId": "scanLibrary",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Libraries"
        ],
        "x-immich-admin-only": true,
        "x-immich-permission": "library.update",
        "description": "This endpoint is an admin-only route, and requires the `library.update` permission."
      }
    },
    "/libraries/{id}/statistics": {
      "get": {
        "operationId": "getLibraryStatistics",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Libraries"
        ],
        "x-immich-admin-only": true,
        "x-immich-permission": "library.statistics",
        "description": "This endpoint is an admin-only route, and requires the `library.statistics` permission."
      }
    },
    "/libraries/{id}/validate": {
      "post": {
        "operationId": "validate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateLibraryDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Libraries"
        ],
        "x-immich-admin-only": true
      }
    },
    "/map/markers": {
      "get": {
        "operationId": "getMapMarkers",
        "parameters": [
          {
            "name": "isArchived",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isFavorite",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fileCreatedAfter",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "fileCreatedBefore",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "withPartners",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "withSharedAlbums",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Map"
        ]
      }
    },
    "/map/reverse-geocode": {
      "get": {
        "operationId": "reverseGeocode",
        "parameters": [
          {
            "name": "lat",
            "required": true,
            "in": "query",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "name": "lon",
            "required": true,
            "in": "query",
            "schema": {
              "format": "double",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Map"
        ]
      }
    },
    "/memories": {
      "get": {
        "operationId": "searchMemories",
        "parameters": [
          {
            "name": "for",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "isSaved",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isTrashed",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "type",
            "required": true,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/MemoryType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Memories"
        ],
        "x-immich-permission": "memory.read",
        "description": "This endpoint requires the `memory.read` permission."
      },
      "post": {
        "operationId": "createMemory",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemoryCreateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Memories"
        ],
        "x-immich-permission": "memory.create",
        "description": "This endpoint requires the `memory.create` permission."
      }
    },
    "/memories/statistics": {
      "get": {
        "operationId": "memoriesStatistics",
        "parameters": [
          {
            "name": "for",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "isSaved",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isTrashed",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "type",
            "required": true,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/MemoryType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Memories"
        ],
        "x-immich-permission": "memory.statistics",
        "description": "This endpoint requires the `memory.statistics` permission."
      }
    },
    "/memories/{id}": {
      "delete": {
        "operationId": "deleteMemory",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Memories"
        ],
        "x-immich-permission": "memory.delete",
        "description": "This endpoint requires the `memory.delete` permission."
      },
      "get": {
        "operationId": "getMemory",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Memories"
        ],
        "x-immich-permission": "memory.read",
        "description": "This endpoint requires the `memory.read` permission."
      },
      "put": {
        "operationId": "updateMemory",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemoryUpdateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Memories"
        ],
        "x-immich-permission": "memory.update",
        "description": "This endpoint requires the `memory.update` permission."
      }
    },
    "/memories/{id}/assets": {
      "delete": {
        "operationId": "removeMemoryAssets",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkIdsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Memories"
        ],
        "x-immich-permission": "memoryAsset.delete",
        "description": "This endpoint requires the `memoryAsset.delete` permission."
      },
      "put": {
        "operationId": "addMemoryAssets",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkIdsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Memories"
        ],
        "x-immich-permission": "memoryAsset.create",
        "description": "This endpoint requires the `memoryAsset.create` permission."
      }
    },
    "/notifications": {
      "delete": {
        "operationId": "deleteNotifications",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationDeleteAllDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Notifications"
        ],
        "x-immich-permission": "notification.delete",
        "description": "This endpoint requires the `notification.delete` permission."
      },
      "get": {
        "operationId": "getNotifications",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "level",
            "required": true,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/NotificationLevel"
            }
          },
          {
            "name": "type",
            "required": true,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/NotificationType"
            }
          },
          {
            "name": "unread",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Notifications"
        ],
        "x-immich-permission": "notification.read",
        "description": "This endpoint requires the `notification.read` permission."
      },
      "put": {
        "operationId": "updateNotifications",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationUpdateAllDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Notifications"
        ],
        "x-immich-permission": "notification.update",
        "description": "This endpoint requires the `notification.update` permission."
      }
    },
    "/notifications/{id}": {
      "delete": {
        "operationId": "deleteNotification",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Notifications"
        ],
        "x-immich-permission": "notification.delete",
        "description": "This endpoint requires the `notification.delete` permission."
      },
      "get": {
        "operationId": "getNotification",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Notifications"
        ],
        "x-immich-permission": "notification.read",
        "description": "This endpoint requires the `notification.read` permission."
      },
      "put": {
        "operationId": "updateNotification",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationUpdateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Notifications"
        ],
        "x-immich-permission": "notification.update",
        "description": "This endpoint requires the `notification.update` permission."
      }
    },
    "/oauth/authorize": {
      "post": {
        "operationId": "startOAuth",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OAuthConfigDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "OAuth"
        ]
      }
    },
    "/oauth/callback": {
      "post": {
        "operationId": "finishOAuth",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OAuthCallbackDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "OAuth"
        ]
      }
    },
    "/oauth/link": {
      "post": {
        "operationId": "linkOAuthAccount",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OAuthCallbackDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "OAuth"
        ]
      }
    },
    "/oauth/mobile-redirect": {
      "get": {
        "operationId": "redirectOAuthToMobile",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "OAuth"
        ]
      }
    },
    "/oauth/unlink": {
      "post": {
        "operationId": "unlinkOAuthAccount",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "OAuth"
        ]
      }
    },
    "/partners": {
      "get": {
        "operationId": "getPartners",
        "parameters": [
          {
            "name": "direction",
            "required": true,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/PartnerDirection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Partners"
        ],
        "x-immich-permission": "partner.read",
        "description": "This endpoint requires the `partner.read` permission."
      },
      "post": {
        "operationId": "createPartner",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartnerCreateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Partners"
        ],
        "x-immich-permission": "partner.create",
        "description": "This endpoint requires the `partner.create` permission."
      }
    },
    "/partners/{id}": {
      "delete": {
        "operationId": "removePartner",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Partners"
        ],
        "x-immich-permission": "partner.delete",
        "description": "This endpoint requires the `partner.delete` permission."
      },
      "post": {
        "deprecated": true,
        "description": "This property was deprecated in v1.141.0. This endpoint requires the `partner.create` permission.",
        "operationId": "createPartnerDeprecated",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Partners",
          "Deprecated"
        ],
        "x-immich-lifecycle": {
          "deprecatedAt": "v1.141.0"
        },
        "x-immich-permission": "partner.create"
      },
      "put": {
        "operationId": "updatePartner",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartnerUpdateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Partners"
        ],
        "x-immich-permission": "partner.update",
        "description": "This endpoint requires the `partner.update` permission."
      }
    },
    "/people": {
      "delete": {
        "operationId": "deletePeople",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkIdsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "People"
        ],
        "x-immich-permission": "person.delete",
        "description": "This endpoint requires the `person.delete` permission."
      },
      "get": {
        "operationId": "getAllPeople",
        "parameters": [
          {
            "name": "closestAssetId",
            "required": true,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "closestPersonId",
            "required": true,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "size",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "withHidden",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "People"
        ],
        "x-immich-permission": "person.read",
        "description": "This endpoint requires the `person.read` permission."
      },
      "post": {
        "operationId": "createPerson",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonCreateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "People"
        ],
        "x-immich-permission": "person.create",
        "description": "This endpoint requires the `person.create` permission."
      },
      "put": {
        "operationId": "updatePeople",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PeopleUpdateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "People"
        ],
        "x-immich-permission": "person.update",
        "description": "This endpoint requires the `person.update` permission."
      }
    },
    "/people/{id}": {
      "delete": {
        "operationId": "deletePerson",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "People"
        ],
        "x-immich-permission": "person.delete",
        "description": "This endpoint requires the `person.delete` permission."
      },
      "get": {
        "operationId": "getPerson",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "People"
        ],
        "x-immich-permission": "person.read",
        "description": "This endpoint requires the `person.read` permission."
      },
      "put": {
        "operationId": "updatePerson",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonUpdateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "People"
        ],
        "x-immich-permission": "person.update",
        "description": "This endpoint requires the `person.update` permission."
      }
    },
    "/people/{id}/merge": {
      "post": {
        "operationId": "mergePerson",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MergePersonDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "People"
        ],
        "x-immich-permission": "person.merge",
        "description": "This endpoint requires the `person.merge` permission."
      }
    },
    "/people/{id}/reassign": {
      "put": {
        "operationId": "reassignFaces",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetFaceUpdateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "People"
        ],
        "x-immich-permission": "person.reassign",
        "description": "This endpoint requires the `person.reassign` permission."
      }
    },
    "/people/{id}/statistics": {
      "get": {
        "operationId": "getPersonStatistics",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "People"
        ],
        "x-immich-permission": "person.statistics",
        "description": "This endpoint requires the `person.statistics` permission."
      }
    },
    "/people/{id}/thumbnail": {
      "get": {
        "operationId": "getPersonThumbnail",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "People"
        ],
        "x-immich-permission": "person.read",
        "description": "This endpoint requires the `person.read` permission."
      }
    },
    "/playback/{secret}/a/{codec}/{quality}/playlist.m3u8": {
      "get": {
        "operationId": "getAudioPlaylist",
        "parameters": [
          {
            "name": "codec",
            "required": true,
            "in": "path",
            "schema": {
              "$ref": "#/components/schemas/AudioCodec"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Transcoder"
        ]
      }
    },
    "/playback/{secret}/master.m3u8": {
      "get": {
        "operationId": "getMasterPlaylist",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Transcoder"
        ]
      }
    },
    "/playback/{secret}/{codec}/{quality}/playlist.m3u8": {
      "get": {
        "operationId": "getVideoPlaylist",
        "parameters": [
          {
            "name": "codec",
            "required": true,
            "in": "path",
            "schema": {
              "$ref": "#/components/schemas/VideoCodec"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Transcoder"
        ]
      }
    },
    "/playback/{secret}/{codec}/{quality}/{name}.mp4": {
      "get": {
        "operationId": "getVideoPart",
        "parameters": [
          {
            "name": "codec",
            "required": true,
            "in": "path",
            "schema": {
              "$ref": "#/components/schemas/Codec"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Transcoder"
        ]
      }
    },
    "/search/cities": {
      "get": {
        "operationId": "getAssetsByCity",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Search"
        ],
        "x-immich-permission": "asset.read",
        "description": "This endpoint requires the `asset.read` permission."
      }
    },
    "/search/explore": {
      "get": {
        "operationId": "getExploreData",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Search"
        ],
        "x-immich-permission": "asset.read",
        "description": "This endpoint requires the `asset.read` permission."
      }
    },
    "/search/large-assets": {
      "post": {
        "operationId": "searchLargeAssets",
        "parameters": [
          {
            "name": "albumIds",
            "required": true,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "createdAfter",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "createdBefore",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "isEncoded",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isFavorite",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isMotion",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isNotInAlbum",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isOffline",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "libraryId",
            "required": true,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Object"
            }
          },
          {
            "name": "minFileSize",
            "required": true,
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "personIds",
            "required": true,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "tagIds",
            "required": true,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Object"
            }
          },
          {
            "name": "takenAfter",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "takenBefore",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "trashedAfter",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "trashedBefore",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "type",
            "required": true,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/AssetTypeEnum"
            }
          },
          {
            "name": "updatedAfter",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "updatedBefore",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "visibility",
            "required": true,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/AssetVisibility"
            }
          },
          {
            "name": "withDeleted",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "withExif",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Search"
        ],
        "x-immich-permission": "asset.read",
        "description": "This endpoint requires the `asset.read` permission."
      }
    },
    "/search/metadata": {
      "post": {
        "operationId": "searchAssets",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetadataSearchDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Search"
        ],
        "x-immich-permission": "asset.read",
        "description": "This endpoint requires the `asset.read` permission."
      }
    },
    "/search/person": {
      "get": {
        "operationId": "searchPerson",
        "parameters": [
          {
            "name": "withHidden",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Search"
        ],
        "x-immich-permission": "person.read",
        "description": "This endpoint requires the `person.read` permission."
      }
    },
    "/search/places": {
      "get": {
        "operationId": "searchPlaces",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Search"
        ],
        "x-immich-permission": "asset.read",
        "description": "This endpoint requires the `asset.read` permission."
      }
    },
    "/search/random": {
      "post": {
        "operationId": "searchRandom",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RandomSearchDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Search"
        ],
        "x-immich-permission": "asset.read",
        "description": "This endpoint requires the `asset.read` permission."
      }
    },
    "/search/smart": {
      "post": {
        "operationId": "searchSmart",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SmartSearchDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Search"
        ],
        "x-immich-permission": "asset.read",
        "description": "This endpoint requires the `asset.read` permission."
      }
    },
    "/search/statistics": {
      "post": {
        "operationId": "searchAssetStatistics",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatisticsSearchDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Search"
        ],
        "x-immich-permission": "asset.statistics",
        "description": "This endpoint requires the `asset.statistics` permission."
      }
    },
    "/search/suggestions": {
      "get": {
        "operationId": "getSearchSuggestions",
        "parameters": [
          {
            "name": "includeNull",
            "required": true,
            "in": "query",
            "description": "This property was added in v111.0.0",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "type",
            "required": true,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/SearchSuggestionType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Search"
        ],
        "x-immich-permission": "asset.read",
        "description": "This endpoint requires the `asset.read` permission."
      }
    },
    "/server/about": {
      "get": {
        "operationId": "getAboutInfo",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Server"
        ],
        "x-immich-permission": "server.about",
        "description": "This endpoint requires the `server.about` permission."
      }
    },
    "/server/apk-links": {
      "get": {
        "operationId": "getApkLinks",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Server"
        ],
        "x-immich-permission": "server.apkLinks",
        "description": "This endpoint requires the `server.apkLinks` permission."
      }
    },
    "/server/config": {
      "get": {
        "operationId": "getServerConfig",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Server"
        ]
      }
    },
    "/server/features": {
      "get": {
        "operationId": "getServerFeatures",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Server"
        ]
      }
    },
    "/server/license": {
      "delete": {
        "operationId": "deleteServerLicense",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Server"
        ],
        "x-immich-admin-only": true,
        "x-immich-permission": "serverLicense.delete",
        "description": "This endpoint is an admin-only route, and requires the `serverLicense.delete` permission."
      },
      "get": {
        "operationId": "getServerLicense",
        "parameters": [],
        "responses": {
          "404": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Server"
        ],
        "x-immich-admin-only": true,
        "x-immich-permission": "serverLicense.read",
        "description": "This endpoint is an admin-only route, and requires the `serverLicense.read` permission."
      },
      "put": {
        "operationId": "setServerLicense",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LicenseKeyDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Server"
        ],
        "x-immich-admin-only": true,
        "x-immich-permission": "serverLicense.update",
        "description": "This endpoint is an admin-only route, and requires the `serverLicense.update` permission."
      }
    },
    "/server/media-types": {
      "get": {
        "operationId": "getSupportedMediaTypes",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Server"
        ]
      }
    },
    "/server/ping": {
      "get": {
        "operationId": "pingServer",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Server"
        ]
      }
    },
    "/server/statistics": {
      "get": {
        "operationId": "getServerStatistics",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Server"
        ],
        "x-immich-admin-only": true,
        "x-immich-permission": "server.statistics",
        "description": "This endpoint is an admin-only route, and requires the `server.statistics` permission."
      }
    },
    "/server/storage": {
      "get": {
        "operationId": "getStorage",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Server"
        ],
        "x-immich-permission": "server.storage",
        "description": "This endpoint requires the `server.storage` permission."
      }
    },
    "/server/theme": {
      "get": {
        "operationId": "getTheme",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Server"
        ]
      }
    },
    "/server/version": {
      "get": {
        "operationId": "getServerVersion",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Server"
        ]
      }
    },
    "/server/version-check": {
      "get": {
        "operationId": "getVersionCheck",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Server"
        ],
        "x-immich-permission": "server.versionCheck",
        "description": "This endpoint requires the `server.versionCheck` permission."
      }
    },
    "/server/version-history": {
      "get": {
        "operationId": "getVersionHistory",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Server"
        ]
      }
    },
    "/sessions": {
      "delete": {
        "operationId": "deleteAllSessions",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Sessions"
        ],
        "x-immich-permission": "session.delete",
        "description": "This endpoint requires the `session.delete` permission."
      },
      "get": {
        "operationId": "getSessions",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Sessions"
        ],
        "x-immich-permission": "session.read",
        "description": "This endpoint requires the `session.read` permission."
      },
      "post": {
        "operationId": "createSession",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionCreateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Sessions"
        ],
        "x-immich-permission": "session.create",
        "description": "This endpoint requires the `session.create` permission."
      }
    },
    "/sessions/{id}": {
      "delete": {
        "operationId": "deleteSession",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Sessions"
        ],
        "x-immich-permission": "session.delete",
        "description": "This endpoint requires the `session.delete` permission."
      },
      "put": {
        "operationId": "updateSession",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionUpdateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Sessions"
        ],
        "x-immich-permission": "session.update",
        "description": "This endpoint requires the `session.update` permission."
      }
    },
    "/sessions/{id}/lock": {
      "post": {
        "operationId": "lockSession",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Sessions"
        ],
        "x-immich-permission": "session.lock",
        "description": "This endpoint requires the `session.lock` permission."
      }
    },
    "/shared-links": {
      "get": {
        "operationId": "getAllSharedLinks",
        "parameters": [
          {
            "name": "albumId",
            "required": true,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Shared Links"
        ],
        "x-immich-permission": "sharedLink.read",
        "description": "This endpoint requires the `sharedLink.read` permission."
      },
      "post": {
        "operationId": "createSharedLink",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SharedLinkCreateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Shared Links"
        ],
        "x-immich-permission": "sharedLink.create",
        "description": "This endpoint requires the `sharedLink.create` permission."
      }
    },
    "/shared-links/me": {
      "get": {
        "operationId": "getMySharedLink",
        "parameters": [
          {
            "name": "password",
            "required": true,
            "in": "query",
            "schema": {
              "example": "password",
              "type": "string"
            }
          },
          {
            "name": "key",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slug",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Shared Links"
        ]
      }
    },
    "/shared-links/{id}": {
      "delete": {
        "operationId": "removeSharedLink",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Shared Links"
        ],
        "x-immich-permission": "sharedLink.delete",
        "description": "This endpoint requires the `sharedLink.delete` permission."
      },
      "get": {
        "operationId": "getSharedLinkById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Shared Links"
        ],
        "x-immich-permission": "sharedLink.read",
        "description": "This endpoint requires the `sharedLink.read` permission."
      },
      "patch": {
        "operationId": "updateSharedLink",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SharedLinkEditDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Shared Links"
        ],
        "x-immich-permission": "sharedLink.update",
        "description": "This endpoint requires the `sharedLink.update` permission."
      }
    },
    "/shared-links/{id}/assets": {
      "delete": {
        "operationId": "removeSharedLinkAssets",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "key",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slug",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetIdsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Shared Links"
        ]
      },
      "put": {
        "operationId": "addSharedLinkAssets",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "key",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slug",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetIdsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Shared Links"
        ]
      }
    },
    "/stacks": {
      "delete": {
        "operationId": "deleteStacks",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkIdsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Stacks"
        ],
        "x-immich-permission": "stack.delete",
        "description": "This endpoint requires the `stack.delete` permission."
      },
      "get": {
        "operationId": "searchStacks",
        "parameters": [
          {
            "name": "primaryAssetId",
            "required": true,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Stacks"
        ],
        "x-immich-permission": "stack.read",
        "description": "This endpoint requires the `stack.read` permission."
      },
      "post": {
        "operationId": "createStack",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StackCreateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Stacks"
        ],
        "x-immich-permission": "stack.create",
        "description": "This endpoint requires the `stack.create` permission."
      }
    },
    "/stacks/{id}": {
      "delete": {
        "operationId": "deleteStack",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Stacks"
        ],
        "x-immich-permission": "stack.delete",
        "description": "This endpoint requires the `stack.delete` permission."
      },
      "get": {
        "operationId": "getStack",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Stacks"
        ],
        "x-immich-permission": "stack.read",
        "description": "This endpoint requires the `stack.read` permission."
      },
      "put": {
        "operationId": "updateStack",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StackUpdateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Stacks"
        ],
        "x-immich-permission": "stack.update",
        "description": "This endpoint requires the `stack.update` permission."
      }
    },
    "/stacks/{id}/assets/{assetId}": {
      "delete": {
        "operationId": "removeAssetFromStack",
        "parameters": [
          {
            "name": "assetId",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Stacks"
        ],
        "x-immich-permission": "stack.update",
        "description": "This endpoint requires the `stack.update` permission."
      }
    },
    "/sync/ack": {
      "delete": {
        "operationId": "deleteSyncAck",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SyncAckDeleteDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Sync"
        ],
        "x-immich-permission": "syncCheckpoint.delete",
        "description": "This endpoint requires the `syncCheckpoint.delete` permission."
      },
      "get": {
        "operationId": "getSyncAck",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Sync"
        ],
        "x-immich-permission": "syncCheckpoint.read",
        "description": "This endpoint requires the `syncCheckpoint.read` permission."
      },
      "post": {
        "operationId": "sendSyncAck",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SyncAckSetDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Sync"
        ],
        "x-immich-permission": "syncCheckpoint.update",
        "description": "This endpoint requires the `syncCheckpoint.update` permission."
      }
    },
    "/sync/delta-sync": {
      "post": {
        "operationId": "getDeltaSync",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetDeltaSyncDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Sync"
        ]
      }
    },
    "/sync/full-sync": {
      "post": {
        "operationId": "getFullSyncForUser",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetFullSyncDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Sync"
        ]
      }
    },
    "/sync/stream": {
      "post": {
        "operationId": "getSyncStream",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SyncStreamDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Sync"
        ],
        "x-immich-permission": "sync.stream",
        "description": "This endpoint requires the `sync.stream` permission."
      }
    },
    "/system-config": {
      "get": {
        "operationId": "getConfig",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "System Config"
        ],
        "x-immich-admin-only": true,
        "x-immich-permission": "systemConfig.read",
        "description": "This endpoint is an admin-only route, and requires the `systemConfig.read` permission."
      },
      "put": {
        "operationId": "updateConfig",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemConfigDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "System Config"
        ],
        "x-immich-admin-only": true,
        "x-immich-permission": "systemConfig.update",
        "description": "This endpoint is an admin-only route, and requires the `systemConfig.update` permission."
      }
    },
    "/system-config/defaults": {
      "get": {
        "operationId": "getConfigDefaults",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "System Config"
        ],
        "x-immich-admin-only": true,
        "x-immich-permission": "systemConfig.read",
        "description": "This endpoint is an admin-only route, and requires the `systemConfig.read` permission."
      }
    },
    "/system-config/storage-template-options": {
      "get": {
        "operationId": "getStorageTemplateOptions",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "System Config"
        ],
        "x-immich-admin-only": true,
        "x-immich-permission": "systemConfig.read",
        "description": "This endpoint is an admin-only route, and requires the `systemConfig.read` permission."
      }
    },
    "/system-metadata/admin-onboarding": {
      "get": {
        "operationId": "getAdminOnboarding",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "System Metadata"
        ],
        "x-immich-admin-only": true,
        "x-immich-permission": "systemMetadata.read",
        "description": "This endpoint is an admin-only route, and requires the `systemMetadata.read` permission."
      },
      "post": {
        "operationId": "updateAdminOnboarding",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminOnboardingUpdateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "System Metadata"
        ],
        "x-immich-admin-only": true,
        "x-immich-permission": "systemMetadata.update",
        "description": "This endpoint is an admin-only route, and requires the `systemMetadata.update` permission."
      }
    },
    "/system-metadata/reverse-geocoding-state": {
      "get": {
        "operationId": "getReverseGeocodingState",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "System Metadata"
        ],
        "x-immich-admin-only": true,
        "x-immich-permission": "systemMetadata.read",
        "description": "This endpoint is an admin-only route, and requires the `systemMetadata.read` permission."
      }
    },
    "/system-metadata/version-check-state": {
      "get": {
        "operationId": "getVersionCheckState",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "System Metadata"
        ],
        "x-immich-admin-only": true,
        "x-immich-permission": "systemMetadata.read",
        "description": "This endpoint is an admin-only route, and requires the `systemMetadata.read` permission."
      }
    },
    "/tags": {
      "get": {
        "operationId": "getAllTags",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Tags"
        ],
        "x-immich-permission": "tag.read",
        "description": "This endpoint requires the `tag.read` permission."
      },
      "post": {
        "operationId": "createTag",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagCreateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Tags"
        ],
        "x-immich-permission": "tag.create",
        "description": "This endpoint requires the `tag.create` permission."
      },
      "put": {
        "operationId": "upsertTags",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagUpsertDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Tags"
        ],
        "x-immich-permission": "tag.create",
        "description": "This endpoint requires the `tag.create` permission."
      }
    },
    "/tags/assets": {
      "put": {
        "operationId": "bulkTagAssets",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagBulkAssetsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Tags"
        ],
        "x-immich-permission": "tag.asset",
        "description": "This endpoint requires the `tag.asset` permission."
      }
    },
    "/tags/{id}": {
      "delete": {
        "operationId": "deleteTag",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Tags"
        ],
        "x-immich-permission": "tag.delete",
        "description": "This endpoint requires the `tag.delete` permission."
      },
      "get": {
        "operationId": "getTagById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Tags"
        ],
        "x-immich-permission": "tag.read",
        "description": "This endpoint requires the `tag.read` permission."
      },
      "put": {
        "operationId": "updateTag",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagUpdateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Tags"
        ],
        "x-immich-permission": "tag.update",
        "description": "This endpoint requires the `tag.update` permission."
      }
    },
    "/tags/{id}/assets": {
      "delete": {
        "operationId": "untagAssets",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkIdsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Tags"
        ],
        "x-immich-permission": "tag.asset",
        "description": "This endpoint requires the `tag.asset` permission."
      },
      "put": {
        "operationId": "tagAssets",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkIdsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Tags"
        ],
        "x-immich-permission": "tag.asset",
        "description": "This endpoint requires the `tag.asset` permission."
      }
    },
    "/timeline/bucket": {
      "get": {
        "operationId": "getTimeBucket",
        "parameters": [
          {
            "name": "albumId",
            "required": true,
            "in": "query",
            "description": "Filter assets belonging to a specific album",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "isFavorite",
            "required": true,
            "in": "query",
            "description": "Filter by favorite status (true for favorites only, false for non-favorites only)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isTrashed",
            "required": true,
            "in": "query",
            "description": "Filter by trash status (true for trashed assets only, false for non-trashed only)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "key",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": true,
            "in": "query",
            "description": "Sort order for assets within time buckets (ASC for oldest first, DESC for newest first)",
            "schema": {
              "$ref": "#/components/schemas/AssetOrder"
            }
          },
          {
            "name": "personId",
            "required": true,
            "in": "query",
            "description": "Filter assets containing a specific person (face recognition)",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "slug",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tagId",
            "required": true,
            "in": "query",
            "description": "Filter assets with a specific tag",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "timeBucket",
            "required": true,
            "in": "query",
            "description": "Time bucket identifier in YYYY-MM-DD format (e.g., \"2024-01-01\" for January 2024)",
            "schema": {
              "example": "2024-01-01",
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "query",
            "description": "Filter assets by specific user ID",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "visibility",
            "required": true,
            "in": "query",
            "description": "Filter by asset visibility status (ARCHIVE, TIMELINE, HIDDEN, LOCKED)",
            "schema": {
              "$ref": "#/components/schemas/AssetVisibility"
            }
          },
          {
            "name": "withCoordinates",
            "required": true,
            "in": "query",
            "description": "Include location data in the response",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "withPartners",
            "required": true,
            "in": "query",
            "description": "Include assets shared by partners",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "withStacked",
            "required": true,
            "in": "query",
            "description": "Include stacked assets in the response. When true, only primary assets from stacks are returned.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeBucketAssetResponseDto"
                }
              }
            },
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Timeline"
        ],
        "x-immich-permission": "asset.read",
        "description": "This endpoint requires the `asset.read` permission."
      }
    },
    "/timeline/buckets": {
      "get": {
        "operationId": "getTimeBuckets",
        "parameters": [
          {
            "name": "albumId",
            "required": true,
            "in": "query",
            "description": "Filter assets belonging to a specific album",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "isFavorite",
            "required": true,
            "in": "query",
            "description": "Filter by favorite status (true for favorites only, false for non-favorites only)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isTrashed",
            "required": true,
            "in": "query",
            "description": "Filter by trash status (true for trashed assets only, false for non-trashed only)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "key",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": true,
            "in": "query",
            "description": "Sort order for assets within time buckets (ASC for oldest first, DESC for newest first)",
            "schema": {
              "$ref": "#/components/schemas/AssetOrder"
            }
          },
          {
            "name": "personId",
            "required": true,
            "in": "query",
            "description": "Filter assets containing a specific person (face recognition)",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "slug",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tagId",
            "required": true,
            "in": "query",
            "description": "Filter assets with a specific tag",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "query",
            "description": "Filter assets by specific user ID",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "visibility",
            "required": true,
            "in": "query",
            "description": "Filter by asset visibility status (ARCHIVE, TIMELINE, HIDDEN, LOCKED)",
            "schema": {
              "$ref": "#/components/schemas/AssetVisibility"
            }
          },
          {
            "name": "withCoordinates",
            "required": true,
            "in": "query",
            "description": "Include location data in the response",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "withPartners",
            "required": true,
            "in": "query",
            "description": "Include assets shared by partners",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "withStacked",
            "required": true,
            "in": "query",
            "description": "Include stacked assets in the response. When true, only primary assets from stacks are returned.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Timeline"
        ],
        "x-immich-permission": "asset.read",
        "description": "This endpoint requires the `asset.read` permission."
      }
    },
    "/trash/empty": {
      "post": {
        "operationId": "emptyTrash",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Trash"
        ],
        "x-immich-permission": "asset.delete",
        "description": "This endpoint requires the `asset.delete` permission."
      }
    },
    "/trash/restore": {
      "post": {
        "operationId": "restoreTrash",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Trash"
        ],
        "x-immich-permission": "asset.delete",
        "description": "This endpoint requires the `asset.delete` permission."
      }
    },
    "/trash/restore/assets": {
      "post": {
        "operationId": "restoreAssets",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkIdsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Trash"
        ],
        "x-immich-permission": "asset.delete",
        "description": "This endpoint requires the `asset.delete` permission."
      }
    },
    "/users": {
      "get": {
        "operationId": "searchUsers",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Users"
        ],
        "x-immich-permission": "user.read",
        "description": "This endpoint requires the `user.read` permission."
      }
    },
    "/users/me": {
      "get": {
        "operationId": "getMyUser",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Users"
        ],
        "x-immich-permission": "user.read",
        "description": "This endpoint requires the `user.read` permission."
      },
      "put": {
        "operationId": "updateMyUser",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateMeDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Users"
        ],
        "x-immich-permission": "user.update",
        "description": "This endpoint requires the `user.update` permission."
      }
    },
    "/users/me/license": {
      "delete": {
        "operationId": "deleteUserLicense",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Users"
        ],
        "x-immich-permission": "userLicense.delete",
        "description": "This endpoint requires the `userLicense.delete` permission."
      },
      "get": {
        "operationId": "getUserLicense",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Users"
        ],
        "x-immich-permission": "userLicense.read",
        "description": "This endpoint requires the `userLicense.read` permission."
      },
      "put": {
        "operationId": "setUserLicense",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LicenseKeyDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Users"
        ],
        "x-immich-permission": "userLicense.update",
        "description": "This endpoint requires the `userLicense.update` permission."
      }
    },
    "/users/me/onboarding": {
      "delete": {
        "operationId": "deleteUserOnboarding",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Users"
        ],
        "x-immich-permission": "userOnboarding.delete",
        "description": "This endpoint requires the `userOnboarding.delete` permission."
      },
      "get": {
        "operationId": "getUserOnboarding",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Users"
        ],
        "x-immich-permission": "userOnboarding.read",
        "description": "This endpoint requires the `userOnboarding.read` permission."
      },
      "put": {
        "operationId": "setUserOnboarding",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OnboardingDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Users"
        ],
        "x-immich-permission": "userOnboarding.update",
        "description": "This endpoint requires the `userOnboarding.update` permission."
      }
    },
    "/users/me/preferences": {
      "get": {
        "operationId": "getMyPreferences",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Users"
        ],
        "x-immich-permission": "userPreference.read",
        "description": "This endpoint requires the `userPreference.read` permission."
      },
      "put": {
        "operationId": "updateMyPreferences",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPreferencesUpdateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Users"
        ],
        "x-immich-permission": "userPreference.update",
        "description": "This endpoint requires the `userPreference.update` permission."
      }
    },
    "/users/profile-image": {
      "delete": {
        "operationId": "deleteProfileImage",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Users"
        ],
        "x-immich-permission": "userProfileImage.delete",
        "description": "This endpoint requires the `userProfileImage.delete` permission."
      },
      "post": {
        "operationId": "createProfileImage",
        "parameters": [],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreateProfileImageDto"
              }
            }
          },
          "description": "A new avatar for the user",
          "required": true
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Users"
        ],
        "x-immich-permission": "userProfileImage.update",
        "description": "This endpoint requires the `userProfileImage.update` permission."
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "getUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Users"
        ],
        "x-immich-permission": "user.read",
        "description": "This endpoint requires the `user.read` permission."
      }
    },
    "/users/{id}/profile-image": {
      "get": {
        "operationId": "getProfileImage",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "Users"
        ],
        "x-immich-permission": "userProfileImage.read",
        "description": "This endpoint requires the `userProfileImage.read` permission."
      }
    },
    "/view/folder": {
      "get": {
        "operationId": "getAssetsByOriginalPath",
        "parameters": [
          {
            "name": "path",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "View"
        ]
      }
    },
    "/view/folder/unique-paths": {
      "get": {
        "operationId": "getUniqueOriginalPaths",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "cookie": []
          },
          {
            "api_key": []
          }
        ],
        "tags": [
          "View"
        ]
      }
    }
  },
  "info": {
    "title": "Immich",
    "description": "Immich API",
    "version": "2.1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [
    {
      "url": "/api"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "Bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "in": "header"
      },
      "cookie": {
        "type": "apiKey",
        "in": "cookie",
        "name": "immich_access_token"
      },
      "api_key": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      }
    },
    "schemas": {
      "APIKeyCreateDto": {
        "properties": {
          "permissions": {
            "items": {
              "$ref": "#/components/schemas/Permission"
            },
            "type": "array"
          }
        },
        "required": [
          "permissions"
        ],
        "type": "object"
      },
      "APIKeyUpdateDto": {
        "properties": {
          "permissions": {
            "items": {
              "$ref": "#/components/schemas/Permission"
            },
            "type": "array"
          }
        },
        "required": [
          "permissions"
        ],
        "type": "object"
      },
      "ActivityCreateDto": {
        "properties": {
          "albumId": {
            "format": "uuid",
            "type": "string"
          },
          "assetId": {
            "format": "uuid",
            "type": "string"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReactionType"
              }
            ]
          }
        },
        "required": [
          "albumId",
          "assetId",
          "type"
        ],
        "type": "object"
      },
      "AddUsersDto": {
        "properties": {},
        "type": "object"
      },
      "AdminOnboardingUpdateDto": {
        "properties": {
          "isOnboarded": {
            "type": "boolean"
          }
        },
        "required": [
          "isOnboarded"
        ],
        "type": "object"
      },
      "AlbumUserRole": {
        "enum": [
          "editor",
          "viewer"
        ],
        "type": "string"
      },
      "AlbumsAddAssetsDto": {
        "properties": {
          "albumIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "assetIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "albumIds",
          "assetIds"
        ],
        "type": "object"
      },
      "AssetBulkDeleteDto": {
        "properties": {
          "force": {
            "type": "boolean"
          },
          "ids": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "force",
          "ids"
        ],
        "type": "object"
      },
      "AssetBulkUpdateDto": {
        "properties": {
          "ids": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "isFavorite": {
            "type": "boolean"
          },
          "visibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AssetVisibility"
              }
            ]
          }
        },
        "required": [
          "ids",
          "isFavorite",
          "visibility"
        ],
        "type": "object"
      },
      "AssetBulkUploadCheckDto": {
        "properties": {},
        "type": "object"
      },
      "AssetDeltaSyncDto": {
        "properties": {
          "updatedAfter": {
            "format": "date-time",
            "type": "string"
          },
          "userIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "updatedAfter",
          "userIds"
        ],
        "type": "object"
      },
      "AssetFaceCreateDto": {
        "properties": {
          "assetId": {
            "format": "uuid",
            "type": "string"
          },
          "height": {
            "type": "integer"
          },
          "imageHeight": {
            "type": "integer"
          },
          "imageWidth": {
            "type": "integer"
          },
          "personId": {
            "format": "uuid",
            "type": "string"
          },
          "width": {
            "type": "integer"
          },
          "x": {
            "type": "integer"
          },
          "y": {
            "type": "integer"
          }
        },
        "required": [
          "assetId",
          "height",
          "imageHeight",
          "imageWidth",
          "personId",
          "width",
          "x",
          "y"
        ],
        "type": "object"
      },
      "AssetFaceDeleteDto": {
        "properties": {},
        "type": "object"
      },
      "AssetFaceUpdateDto": {
        "properties": {},
        "type": "object"
      },
      "AssetFullSyncDto": {
        "properties": {
          "lastId": {
            "format": "uuid",
            "type": "string"
          },
          "limit": {
            "type": "integer"
          },
          "updatedUntil": {
            "format": "date-time",
            "type": "string"
          },
          "userId": {
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "lastId",
          "limit",
          "updatedUntil",
          "userId"
        ],
        "type": "object"
      },
      "AssetIdsDto": {
        "properties": {
          "assetIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "assetIds"
        ],
        "type": "object"
      },
      "AssetJobName": {
        "enum": [
          "refresh-faces",
          "refresh-metadata",
          "regenerate-thumbnail",
          "transcode-video"
        ],
        "type": "string"
      },
      "AssetJobsDto": {
        "properties": {
          "assetIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AssetJobName"
              }
            ]
          }
        },
        "required": [
          "assetIds",
          "name"
        ],
        "type": "object"
      },
      "AssetMediaCreateDto": {
        "properties": {
          "assetData": {
            "format": "binary",
            "type": "string"
          },
          "fileCreatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "fileModifiedAt": {
            "format": "date-time",
            "type": "string"
          },
          "isFavorite": {
            "type": "boolean"
          },
          "livePhotoVideoId": {
            "format": "uuid",
            "type": "string"
          },
          "sidecarData": {
            "format": "binary",
            "type": "string"
          },
          "visibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AssetVisibility"
              }
            ]
          }
        },
        "required": [
          "assetData",
          "fileCreatedAt",
          "fileModifiedAt",
          "isFavorite",
          "livePhotoVideoId",
          "visibility"
        ],
        "type": "object"
      },
      "AssetMediaReplaceDto": {
        "properties": {
          "assetData": {
            "format": "binary",
            "type": "string"
          },
          "fileCreatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "fileModifiedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "assetData",
          "fileCreatedAt",
          "fileModifiedAt"
        ],
        "type": "object"
      },
      "AssetMediaSize": {
        "enum": [
          "fullsize",
          "preview",
          "thumbnail"
        ],
        "type": "string"
      },
      "AssetMetadataKey": {
        "enum": [
          "mobile-app"
        ],
        "type": "string"
      },
      "AssetMetadataUpsertDto": {
        "properties": {},
        "type": "object"
      },
      "AssetOrder": {
        "enum": [
          "asc",
          "desc"
        ],
        "type": "string"
      },
      "AssetTypeEnum": {
        "enum": [
          "IMAGE",
          "VIDEO",
          "AUDIO",
          "OTHER"
        ],
        "type": "string"
      },
      "AssetVisibility": {
        "enum": [
          "archive",
          "timeline",
          "hidden",
          "locked"
        ],
        "type": "string"
      },
      "AudioCodec": {
        "enum": [
          "mp3",
          "aac",
          "libopus",
          "pcm_s16le"
        ],
        "type": "string"
      },
      "BulkIdsDto": {
        "properties": {
          "ids": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "ids"
        ],
        "type": "object"
      },
      "ChangePasswordDto": {
        "properties": {
          "newPassword": {
            "example": "password",
            "type": "string"
          },
          "password": {
            "example": "password",
            "type": "string"
          }
        },
        "required": [
          "newPassword",
          "password"
        ],
        "type": "object"
      },
      "CheckExistingAssetsDto": {
        "properties": {},
        "type": "object"
      },
      "Codec": {
        "enum": [
          "h264",
          "hevc",
          "vp9",
          "av1",
          "mp3",
          "aac",
          "libopus",
          "pcm_s16le"
        ],
        "type": "string"
      },
      "CreateAlbumDto": {
        "properties": {
          "albumName": {
            "type": "string"
          },
          "assetIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "albumName",
          "assetIds"
        ],
        "type": "object"
      },
      "CreateLibraryDto": {
        "properties": {
          "ownerId": {
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "ownerId"
        ],
        "type": "object"
      },
      "CreateProfileImageDto": {
        "properties": {
          "file": {
            "format": "binary",
            "type": "string"
          }
        },
        "required": [
          "file"
        ],
        "type": "object"
      },
      "DownloadInfoDto": {
        "properties": {
          "albumId": {
            "format": "uuid",
            "type": "string"
          },
          "archiveSize": {
            "type": "integer"
          },
          "assetIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "userId": {
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "albumId",
          "archiveSize",
          "assetIds",
          "userId"
        ],
        "type": "object"
      },
      "FaceDto": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      },
      "JobCommand": {
        "enum": [
          "start",
          "pause",
          "resume",
          "empty",
          "clear-failed"
        ],
        "type": "string"
      },
      "JobCommandDto": {
        "properties": {
          "command": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JobCommand"
              }
            ]
          },
          "force": {
            "type": "boolean"
          }
        },
        "required": [
          "command",
          "force"
        ],
        "type": "object"
      },
      "JobCreateDto": {
        "properties": {
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ManualJobName"
              }
            ]
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "JobName": {
        "enum": [
          "thumbnailGeneration",
          "metadataExtraction",
          "videoConversion",
          "faceDetection",
          "facialRecognition",
          "smartSearch",
          "duplicateDetection",
          "backgroundTask",
          "storageTemplateMigration",
          "migration",
          "search",
          "sidecar",
          "library",
          "notifications",
          "backupDatabase"
        ],
        "type": "string"
      },
      "LicenseKeyDto": {
        "properties": {},
        "type": "object"
      },
      "LoginCredentialDto": {
        "properties": {
          "email": {
            "example": "testuser@email.com",
            "type": "string"
          },
          "password": {
            "example": "password",
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ],
        "type": "object"
      },
      "ManualJobName": {
        "enum": [
          "person-cleanup",
          "tag-cleanup",
          "user-cleanup",
          "memory-cleanup",
          "memory-create",
          "backup-database"
        ],
        "type": "string"
      },
      "MemoryCreateDto": {
        "properties": {
          "assetIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "isSaved": {
            "type": "boolean"
          },
          "memoryAt": {
            "format": "date-time",
            "type": "string"
          },
          "seenAt": {
            "format": "date-time",
            "type": "string"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MemoryType"
              }
            ]
          }
        },
        "required": [
          "assetIds",
          "isSaved",
          "memoryAt",
          "seenAt",
          "type"
        ],
        "type": "object"
      },
      "MemoryType": {
        "enum": [
          "on_this_day"
        ],
        "type": "string"
      },
      "MemoryUpdateDto": {
        "properties": {
          "isSaved": {
            "type": "boolean"
          },
          "memoryAt": {
            "format": "date-time",
            "type": "string"
          },
          "seenAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "isSaved",
          "memoryAt",
          "seenAt"
        ],
        "type": "object"
      },
      "MergePersonDto": {
        "properties": {
          "ids": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "ids"
        ],
        "type": "object"
      },
      "MetadataSearchDto": {
        "properties": {
          "albumIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "createdAfter": {
            "format": "date-time",
            "type": "string"
          },
          "createdBefore": {
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "isEncoded": {
            "type": "boolean"
          },
          "isFavorite": {
            "type": "boolean"
          },
          "isMotion": {
            "type": "boolean"
          },
          "isNotInAlbum": {
            "type": "boolean"
          },
          "isOffline": {
            "type": "boolean"
          },
          "libraryId": {
            "format": "uuid",
            "type": "object"
          },
          "order": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AssetOrder"
              }
            ],
            "default": "desc"
          },
          "originalFileName": {
            "type": "string"
          },
          "personIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "tagIds": {
            "format": "uuid",
            "type": "object"
          },
          "takenAfter": {
            "format": "date-time",
            "type": "string"
          },
          "takenBefore": {
            "format": "date-time",
            "type": "string"
          },
          "trashedAfter": {
            "format": "date-time",
            "type": "string"
          },
          "trashedBefore": {
            "format": "date-time",
            "type": "string"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AssetTypeEnum"
              }
            ]
          },
          "updatedAfter": {
            "format": "date-time",
            "type": "string"
          },
          "updatedBefore": {
            "format": "date-time",
            "type": "string"
          },
          "visibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AssetVisibility"
              }
            ]
          },
          "withDeleted": {
            "type": "boolean"
          },
          "withExif": {
            "type": "boolean"
          },
          "withPeople": {
            "type": "boolean"
          },
          "withStacked": {
            "type": "boolean"
          }
        },
        "required": [
          "albumIds",
          "createdAfter",
          "createdBefore",
          "description",
          "id",
          "isEncoded",
          "isFavorite",
          "isMotion",
          "isNotInAlbum",
          "isOffline",
          "libraryId",
          "order",
          "originalFileName",
          "personIds",
          "tagIds",
          "takenAfter",
          "takenBefore",
          "trashedAfter",
          "trashedBefore",
          "type",
          "updatedAfter",
          "updatedBefore",
          "visibility",
          "withDeleted",
          "withExif",
          "withPeople",
          "withStacked"
        ],
        "type": "object"
      },
      "NotificationCreateDto": {
        "properties": {
          "level": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NotificationLevel"
              }
            ]
          },
          "readAt": {
            "format": "date-time",
            "type": "object"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NotificationType"
              }
            ]
          },
          "userId": {
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "level",
          "readAt",
          "type",
          "userId"
        ],
        "type": "object"
      },
      "NotificationDeleteAllDto": {
        "properties": {
          "ids": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "ids"
        ],
        "type": "object"
      },
      "NotificationLevel": {
        "enum": [
          "success",
          "error",
          "warning",
          "info"
        ],
        "type": "string"
      },
      "NotificationType": {
        "enum": [
          "JobFailed",
          "BackupFailed",
          "SystemMessage",
          "AlbumInvite",
          "AlbumUpdate",
          "Custom"
        ],
        "type": "string"
      },
      "NotificationUpdateAllDto": {
        "properties": {
          "ids": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "readAt": {
            "format": "date-time",
            "type": "object"
          }
        },
        "required": [
          "ids",
          "readAt"
        ],
        "type": "object"
      },
      "NotificationUpdateDto": {
        "properties": {
          "readAt": {
            "format": "date-time",
            "type": "object"
          }
        },
        "required": [
          "readAt"
        ],
        "type": "object"
      },
      "OAuthCallbackDto": {
        "properties": {
          "url": {
            "type": "string"
          }
        },
        "required": [
          "url"
        ],
        "type": "object"
      },
      "OAuthConfigDto": {
        "properties": {},
        "type": "object"
      },
      "Object": {
        "properties": {},
        "type": "object"
      },
      "OnboardingDto": {
        "properties": {
          "isOnboarded": {
            "type": "boolean"
          }
        },
        "required": [
          "isOnboarded"
        ],
        "type": "object"
      },
      "PartnerCreateDto": {
        "properties": {
          "sharedWithId": {
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "sharedWithId"
        ],
        "type": "object"
      },
      "PartnerDirection": {
        "enum": [
          "shared-by",
          "shared-with"
        ],
        "type": "string"
      },
      "PartnerUpdateDto": {
        "properties": {},
        "type": "object"
      },
      "PeopleUpdateDto": {
        "properties": {},
        "type": "object"
      },
      "Permission": {
        "enum": [
          "all",
          "activity.create",
          "activity.read",
          "activity.update",
          "activity.delete",
          "activity.statistics",
          "apiKey.create",
          "apiKey.read",
          "apiKey.update",
          "apiKey.delete",
          "asset.read",
          "asset.update",
          "asset.delete",
          "asset.statistics",
          "asset.share",
          "asset.view",
          "asset.download",
          "asset.upload",
          "asset.replace",
          "album.create",
          "album.read",
          "album.update",
          "album.delete",
          "album.statistics",
          "album.share",
          "album.download",
          "albumAsset.create",
          "albumAsset.delete",
          "albumUser.create",
          "albumUser.update",
          "albumUser.delete",
          "auth.changePassword",
          "authDevice.delete",
          "archive.read",
          "duplicate.read",
          "duplicate.delete",
          "face.create",
          "face.read",
          "face.update",
          "face.delete",
          "job.create",
          "job.read",
          "library.create",
          "library.read",
          "library.update",
          "library.delete",
          "library.statistics",
          "timeline.read",
          "timeline.download",
          "memory.create",
          "memory.read",
          "memory.update",
          "memory.delete",
          "memory.statistics",
          "memoryAsset.create",
          "memoryAsset.delete",
          "notification.create",
          "notification.read",
          "notification.update",
          "notification.delete",
          "partner.create",
          "partner.read",
          "partner.update",
          "partner.delete",
          "person.create",
          "person.read",
          "person.update",
          "person.delete",
          "person.statistics",
          "person.merge",
          "person.reassign",
          "pinCode.create",
          "pinCode.update",
          "pinCode.delete",
          "server.about",
          "server.apkLinks",
          "server.storage",
          "server.statistics",
          "server.versionCheck",
          "serverLicense.read",
          "serverLicense.update",
          "serverLicense.delete",
          "session.create",
          "session.read",
          "session.update",
          "session.delete",
          "session.lock",
          "sharedLink.create",
          "sharedLink.read",
          "sharedLink.update",
          "sharedLink.delete",
          "stack.create",
          "stack.read",
          "stack.update",
          "stack.delete",
          "sync.stream",
          "syncCheckpoint.read",
          "syncCheckpoint.update",
          "syncCheckpoint.delete",
          "systemConfig.read",
          "systemConfig.update",
          "systemMetadata.read",
          "systemMetadata.update",
          "tag.create",
          "tag.read",
          "tag.update",
          "tag.delete",
          "tag.asset",
          "user.read",
          "user.update",
          "userLicense.create",
          "userLicense.read",
          "userLicense.update",
          "userLicense.delete",
          "userOnboarding.read",
          "userOnboarding.update",
          "userOnboarding.delete",
          "userPreference.read",
          "userPreference.update",
          "userProfileImage.create",
          "userProfileImage.read",
          "userProfileImage.update",
          "userProfileImage.delete",
          "adminUser.create",
          "adminUser.read",
          "adminUser.update",
          "adminUser.delete",
          "adminAuth.unlinkAll"
        ],
        "type": "string"
      },
      "PersonCreateDto": {
        "properties": {
          "birthDate": {
            "format": "date",
            "type": "object"
          },
          "isFavorite": {
            "type": "boolean"
          },
          "isHidden": {
            "type": "boolean"
          }
        },
        "required": [
          "birthDate",
          "isFavorite",
          "isHidden"
        ],
        "type": "object"
      },
      "PersonUpdateDto": {
        "properties": {
          "birthDate": {
            "format": "date",
            "type": "object"
          },
          "featureFaceAssetId": {
            "format": "uuid",
            "type": "string"
          },
          "isFavorite": {
            "type": "boolean"
          },
          "isHidden": {
            "type": "boolean"
          }
        },
        "required": [
          "birthDate",
          "featureFaceAssetId",
          "isFavorite",
          "isHidden"
        ],
        "type": "object"
      },
      "PinCodeChangeDto": {
        "properties": {
          "newPinCode": {
            "example": "123456",
            "type": "string"
          },
          "pinCode": {
            "example": "123456",
            "type": "string"
          }
        },
        "required": [
          "newPinCode",
          "pinCode"
        ],
        "type": "object"
      },
      "PinCodeResetDto": {
        "properties": {
          "pinCode": {
            "example": "123456",
            "type": "string"
          }
        },
        "required": [
          "pinCode"
        ],
        "type": "object"
      },
      "PinCodeSetupDto": {
        "properties": {
          "pinCode": {
            "example": "123456",
            "type": "string"
          }
        },
        "required": [
          "pinCode"
        ],
        "type": "object"
      },
      "RandomSearchDto": {
        "properties": {
          "albumIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "createdAfter": {
            "format": "date-time",
            "type": "string"
          },
          "createdBefore": {
            "format": "date-time",
            "type": "string"
          },
          "isEncoded": {
            "type": "boolean"
          },
          "isFavorite": {
            "type": "boolean"
          },
          "isMotion": {
            "type": "boolean"
          },
          "isNotInAlbum": {
            "type": "boolean"
          },
          "isOffline": {
            "type": "boolean"
          },
          "libraryId": {
            "format": "uuid",
            "type": "object"
          },
          "personIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "tagIds": {
            "format": "uuid",
            "type": "object"
          },
          "takenAfter": {
            "format": "date-time",
            "type": "string"
          },
          "takenBefore": {
            "format": "date-time",
            "type": "string"
          },
          "trashedAfter": {
            "format": "date-time",
            "type": "string"
          },
          "trashedBefore": {
            "format": "date-time",
            "type": "string"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AssetTypeEnum"
              }
            ]
          },
          "updatedAfter": {
            "format": "date-time",
            "type": "string"
          },
          "updatedBefore": {
            "format": "date-time",
            "type": "string"
          },
          "visibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AssetVisibility"
              }
            ]
          },
          "withDeleted": {
            "type": "boolean"
          },
          "withExif": {
            "type": "boolean"
          },
          "withPeople": {
            "type": "boolean"
          },
          "withStacked": {
            "type": "boolean"
          }
        },
        "required": [
          "albumIds",
          "createdAfter",
          "createdBefore",
          "isEncoded",
          "isFavorite",
          "isMotion",
          "isNotInAlbum",
          "isOffline",
          "libraryId",
          "personIds",
          "tagIds",
          "takenAfter",
          "takenBefore",
          "trashedAfter",
          "trashedBefore",
          "type",
          "updatedAfter",
          "updatedBefore",
          "visibility",
          "withDeleted",
          "withExif",
          "withPeople",
          "withStacked"
        ],
        "type": "object"
      },
      "ReactionLevel": {
        "enum": [
          "album",
          "asset"
        ],
        "type": "string"
      },
      "ReactionType": {
        "enum": [
          "comment",
          "like"
        ],
        "type": "string"
      },
      "SearchSuggestionType": {
        "enum": [
          "country",
          "state",
          "city",
          "camera-make",
          "camera-model"
        ],
        "type": "string"
      },
      "SessionCreateDto": {
        "properties": {},
        "type": "object"
      },
      "SessionUnlockDto": {
        "properties": {
          "pinCode": {
            "example": "123456",
            "type": "string"
          }
        },
        "required": [
          "pinCode"
        ],
        "type": "object"
      },
      "SessionUpdateDto": {
        "properties": {
          "isPendingSyncReset": {
            "type": "boolean"
          }
        },
        "required": [
          "isPendingSyncReset"
        ],
        "type": "object"
      },
      "SharedLinkCreateDto": {
        "properties": {
          "albumId": {
            "format": "uuid",
            "type": "string"
          },
          "allowDownload": {
            "type": "boolean"
          },
          "allowUpload": {
            "type": "boolean"
          },
          "assetIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "expiresAt": {
            "format": "date-time",
            "type": "object"
          },
          "showMetadata": {
            "type": "boolean"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SharedLinkType"
              }
            ]
          }
        },
        "required": [
          "albumId",
          "allowDownload",
          "allowUpload",
          "assetIds",
          "expiresAt",
          "showMetadata",
          "type"
        ],
        "type": "object"
      },
      "SharedLinkEditDto": {
        "properties": {
          "allowDownload": {
            "type": "boolean"
          },
          "allowUpload": {
            "type": "boolean"
          },
          "changeExpiryTime": {
            "type": "boolean"
          },
          "showMetadata": {
            "type": "boolean"
          }
        },
        "required": [
          "allowDownload",
          "allowUpload",
          "changeExpiryTime",
          "showMetadata"
        ],
        "type": "object"
      },
      "SharedLinkType": {
        "enum": [
          "ALBUM",
          "INDIVIDUAL"
        ],
        "type": "string"
      },
      "SignUpDto": {
        "properties": {
          "email": {
            "example": "testuser@email.com",
            "type": "string"
          },
          "name": {
            "example": "Admin",
            "type": "string"
          },
          "password": {
            "example": "password",
            "type": "string"
          }
        },
        "required": [
          "email",
          "name",
          "password"
        ],
        "type": "object"
      },
      "SmartSearchDto": {
        "properties": {
          "albumIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "createdAfter": {
            "format": "date-time",
            "type": "string"
          },
          "createdBefore": {
            "format": "date-time",
            "type": "string"
          },
          "isEncoded": {
            "type": "boolean"
          },
          "isFavorite": {
            "type": "boolean"
          },
          "isMotion": {
            "type": "boolean"
          },
          "isNotInAlbum": {
            "type": "boolean"
          },
          "isOffline": {
            "type": "boolean"
          },
          "libraryId": {
            "format": "uuid",
            "type": "object"
          },
          "personIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "query": {
            "type": "string"
          },
          "queryAssetId": {
            "format": "uuid",
            "type": "string"
          },
          "tagIds": {
            "format": "uuid",
            "type": "object"
          },
          "takenAfter": {
            "format": "date-time",
            "type": "string"
          },
          "takenBefore": {
            "format": "date-time",
            "type": "string"
          },
          "trashedAfter": {
            "format": "date-time",
            "type": "string"
          },
          "trashedBefore": {
            "format": "date-time",
            "type": "string"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AssetTypeEnum"
              }
            ]
          },
          "updatedAfter": {
            "format": "date-time",
            "type": "string"
          },
          "updatedBefore": {
            "format": "date-time",
            "type": "string"
          },
          "visibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AssetVisibility"
              }
            ]
          },
          "withDeleted": {
            "type": "boolean"
          },
          "withExif": {
            "type": "boolean"
          }
        },
        "required": [
          "albumIds",
          "createdAfter",
          "createdBefore",
          "isEncoded",
          "isFavorite",
          "isMotion",
          "isNotInAlbum",
          "isOffline",
          "libraryId",
          "personIds",
          "query",
          "queryAssetId",
          "tagIds",
          "takenAfter",
          "takenBefore",
          "trashedAfter",
          "trashedBefore",
          "type",
          "updatedAfter",
          "updatedBefore",
          "visibility",
          "withDeleted",
          "withExif"
        ],
        "type": "object"
      },
      "StackCreateDto": {
        "properties": {
          "assetIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "assetIds"
        ],
        "type": "object"
      },
      "StackUpdateDto": {
        "properties": {
          "primaryAssetId": {
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "primaryAssetId"
        ],
        "type": "object"
      },
      "StatisticsSearchDto": {
        "properties": {
          "albumIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "createdAfter": {
            "format": "date-time",
            "type": "string"
          },
          "createdBefore": {
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "isEncoded": {
            "type": "boolean"
          },
          "isFavorite": {
            "type": "boolean"
          },
          "isMotion": {
            "type": "boolean"
          },
          "isNotInAlbum": {
            "type": "boolean"
          },
          "isOffline": {
            "type": "boolean"
          },
          "libraryId": {
            "format": "uuid",
            "type": "object"
          },
          "personIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "tagIds": {
            "format": "uuid",
            "type": "object"
          },
          "takenAfter": {
            "format": "date-time",
            "type": "string"
          },
          "takenBefore": {
            "format": "date-time",
            "type": "string"
          },
          "trashedAfter": {
            "format": "date-time",
            "type": "string"
          },
          "trashedBefore": {
            "format": "date-time",
            "type": "string"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AssetTypeEnum"
              }
            ]
          },
          "updatedAfter": {
            "format": "date-time",
            "type": "string"
          },
          "updatedBefore": {
            "format": "date-time",
            "type": "string"
          },
          "visibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AssetVisibility"
              }
            ]
          }
        },
        "required": [
          "albumIds",
          "createdAfter",
          "createdBefore",
          "description",
          "isEncoded",
          "isFavorite",
          "isMotion",
          "isNotInAlbum",
          "isOffline",
          "libraryId",
          "personIds",
          "tagIds",
          "takenAfter",
          "takenBefore",
          "trashedAfter",
          "trashedBefore",
          "type",
          "updatedAfter",
          "updatedBefore",
          "visibility"
        ],
        "type": "object"
      },
      "SyncAckDeleteDto": {
        "properties": {
          "types": {
            "items": {
              "$ref": "#/components/schemas/SyncEntityType"
            },
            "type": "array"
          }
        },
        "required": [
          "types"
        ],
        "type": "object"
      },
      "SyncAckSetDto": {
        "properties": {},
        "type": "object"
      },
      "SyncAckV1": {
        "properties": {},
        "type": "object"
      },
      "SyncAlbumDeleteV1": {
        "properties": {},
        "type": "object"
      },
      "SyncAlbumToAssetDeleteV1": {
        "properties": {},
        "type": "object"
      },
      "SyncAlbumToAssetV1": {
        "properties": {},
        "type": "object"
      },
      "SyncAlbumUserDeleteV1": {
        "properties": {},
        "type": "object"
      },
      "SyncAlbumUserV1": {
        "properties": {
          "role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AlbumUserRole"
              }
            ]
          }
        },
        "required": [
          "role"
        ],
        "type": "object"
      },
      "SyncAlbumV1": {
        "properties": {
          "order": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AssetOrder"
              }
            ]
          }
        },
        "required": [
          "order"
        ],
        "type": "object"
      },
      "SyncAssetDeleteV1": {
        "properties": {},
        "type": "object"
      },
      "SyncAssetExifV1": {
        "properties": {
          "exifImageHeight": {
            "type": "integer"
          },
          "exifImageWidth": {
            "type": "integer"
          },
          "fNumber": {
            "format": "double",
            "type": "number"
          },
          "fileSizeInByte": {
            "type": "integer"
          },
          "focalLength": {
            "format": "double",
            "type": "number"
          },
          "fps": {
            "format": "double",
            "type": "number"
          },
          "iso": {
            "type": "integer"
          },
          "latitude": {
            "format": "double",
            "type": "number"
          },
          "longitude": {
            "format": "double",
            "type": "number"
          },
          "rating": {
            "type": "integer"
          }
        },
        "required": [
          "exifImageHeight",
          "exifImageWidth",
          "fNumber",
          "fileSizeInByte",
          "focalLength",
          "fps",
          "iso",
          "latitude",
          "longitude",
          "rating"
        ],
        "type": "object"
      },
      "SyncAssetFaceDeleteV1": {
        "properties": {},
        "type": "object"
      },
      "SyncAssetFaceV1": {
        "properties": {
          "boundingBoxX1": {
            "type": "integer"
          },
          "boundingBoxX2": {
            "type": "integer"
          },
          "boundingBoxY1": {
            "type": "integer"
          },
          "boundingBoxY2": {
            "type": "integer"
          },
          "imageHeight": {
            "type": "integer"
          },
          "imageWidth": {
            "type": "integer"
          }
        },
        "required": [
          "boundingBoxX1",
          "boundingBoxX2",
          "boundingBoxY1",
          "boundingBoxY2",
          "imageHeight",
          "imageWidth"
        ],
        "type": "object"
      },
      "SyncAssetMetadataDeleteV1": {
        "properties": {
          "key": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AssetMetadataKey"
              }
            ]
          }
        },
        "required": [
          "key"
        ],
        "type": "object"
      },
      "SyncAssetMetadataV1": {
        "properties": {
          "key": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AssetMetadataKey"
              }
            ]
          }
        },
        "required": [
          "key"
        ],
        "type": "object"
      },
      "SyncAssetV1": {
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AssetTypeEnum"
              }
            ]
          },
          "visibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AssetVisibility"
              }
            ]
          }
        },
        "required": [
          "type",
          "visibility"
        ],
        "type": "object"
      },
      "SyncAuthUserV1": {
        "properties": {
          "avatarColor": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserAvatarColor"
              }
            ]
          },
          "quotaSizeInBytes": {
            "type": "integer"
          },
          "quotaUsageInBytes": {
            "type": "integer"
          }
        },
        "required": [
          "avatarColor",
          "quotaSizeInBytes",
          "quotaUsageInBytes"
        ],
        "type": "object"
      },
      "SyncCompleteV1": {
        "properties": {},
        "type": "object"
      },
      "SyncEntityType": {
        "enum": [
          "AuthUserV1",
          "UserV1",
          "UserDeleteV1",
          "AssetV1",
          "AssetDeleteV1",
          "AssetExifV1",
          "AssetMetadataV1",
          "AssetMetadataDeleteV1",
          "PartnerV1",
          "PartnerDeleteV1",
          "PartnerAssetV1",
          "PartnerAssetBackfillV1",
          "PartnerAssetDeleteV1",
          "PartnerAssetExifV1",
          "PartnerAssetExifBackfillV1",
          "PartnerStackBackfillV1",
          "PartnerStackDeleteV1",
          "PartnerStackV1",
          "AlbumV1",
          "AlbumDeleteV1",
          "AlbumUserV1",
          "AlbumUserBackfillV1",
          "AlbumUserDeleteV1",
          "AlbumAssetCreateV1",
          "AlbumAssetUpdateV1",
          "AlbumAssetBackfillV1",
          "AlbumAssetExifCreateV1",
          "AlbumAssetExifUpdateV1",
          "AlbumAssetExifBackfillV1",
          "AlbumToAssetV1",
          "AlbumToAssetDeleteV1",
          "AlbumToAssetBackfillV1",
          "MemoryV1",
          "MemoryDeleteV1",
          "MemoryToAssetV1",
          "MemoryToAssetDeleteV1",
          "StackV1",
          "StackDeleteV1",
          "PersonV1",
          "PersonDeleteV1",
          "AssetFaceV1",
          "AssetFaceDeleteV1",
          "UserMetadataV1",
          "UserMetadataDeleteV1",
          "SyncAckV1",
          "SyncResetV1",
          "SyncCompleteV1"
        ],
        "type": "string"
      },
      "SyncMemoryAssetDeleteV1": {
        "properties": {},
        "type": "object"
      },
      "SyncMemoryAssetV1": {
        "properties": {},
        "type": "object"
      },
      "SyncMemoryDeleteV1": {
        "properties": {},
        "type": "object"
      },
      "SyncMemoryV1": {
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MemoryType"
              }
            ]
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "SyncPartnerDeleteV1": {
        "properties": {},
        "type": "object"
      },
      "SyncPartnerV1": {
        "properties": {},
        "type": "object"
      },
      "SyncPersonDeleteV1": {
        "properties": {},
        "type": "object"
      },
      "SyncPersonV1": {
        "properties": {},
        "type": "object"
      },
      "SyncRequestType": {
        "enum": [
          "AlbumsV1",
          "AlbumUsersV1",
          "AlbumToAssetsV1",
          "AlbumAssetsV1",
          "AlbumAssetExifsV1",
          "AssetsV1",
          "AssetExifsV1",
          "AssetMetadataV1",
          "AuthUsersV1",
          "MemoriesV1",
          "MemoryToAssetsV1",
          "PartnersV1",
          "PartnerAssetsV1",
          "PartnerAssetExifsV1",
          "PartnerStacksV1",
          "StacksV1",
          "UsersV1",
          "PeopleV1",
          "AssetFacesV1",
          "UserMetadataV1"
        ],
        "type": "string"
      },
      "SyncResetV1": {
        "properties": {},
        "type": "object"
      },
      "SyncStackDeleteV1": {
        "properties": {},
        "type": "object"
      },
      "SyncStackV1": {
        "properties": {},
        "type": "object"
      },
      "SyncStreamDto": {
        "properties": {
          "reset": {
            "type": "boolean"
          },
          "types": {
            "items": {
              "$ref": "#/components/schemas/SyncRequestType"
            },
            "type": "array"
          }
        },
        "required": [
          "reset",
          "types"
        ],
        "type": "object"
      },
      "SyncUserDeleteV1": {
        "properties": {},
        "type": "object"
      },
      "SyncUserMetadataDeleteV1": {
        "properties": {
          "key": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserMetadataKey"
              }
            ]
          }
        },
        "required": [
          "key"
        ],
        "type": "object"
      },
      "SyncUserMetadataV1": {
        "properties": {
          "key": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserMetadataKey"
              }
            ]
          }
        },
        "required": [
          "key"
        ],
        "type": "object"
      },
      "SyncUserV1": {
        "properties": {
          "avatarColor": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserAvatarColor"
              }
            ]
          }
        },
        "required": [
          "avatarColor"
        ],
        "type": "object"
      },
      "SystemConfigDto": {
        "properties": {},
        "type": "object"
      },
      "SystemConfigSmtpDto": {
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        },
        "required": [
          "enabled"
        ],
        "type": "object"
      },
      "TagBulkAssetsDto": {
        "properties": {
          "assetIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "tagIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "assetIds",
          "tagIds"
        ],
        "type": "object"
      },
      "TagCreateDto": {
        "properties": {
          "parentId": {
            "format": "uuid",
            "type": "object"
          }
        },
        "required": [
          "parentId"
        ],
        "type": "object"
      },
      "TagUpdateDto": {
        "properties": {},
        "type": "object"
      },
      "TagUpsertDto": {
        "properties": {},
        "type": "object"
      },
      "TemplateDto": {
        "properties": {},
        "type": "object"
      },
      "TimeBucketAssetResponseDto": {
        "properties": {
          "city": {
            "description": "Array of city names extracted from EXIF GPS data",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "type": "array"
          },
          "country": {
            "description": "Array of country names extracted from EXIF GPS data",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "type": "array"
          },
          "duration": {
            "description": "Array of video durations in HH:MM:SS format (null for images)",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "type": "array"
          },
          "fileCreatedAt": {
            "description": "Array of file creation timestamps in UTC (ISO 8601 format, without timezone)",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "id": {
            "description": "Array of asset IDs in the time bucket",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "isFavorite": {
            "description": "Array indicating whether each asset is favorited",
            "items": {
              "type": "boolean"
            },
            "type": "array"
          },
          "isImage": {
            "description": "Array indicating whether each asset is an image (false for videos)",
            "items": {
              "type": "boolean"
            },
            "type": "array"
          },
          "isTrashed": {
            "description": "Array indicating whether each asset is in the trash",
            "items": {
              "type": "boolean"
            },
            "type": "array"
          },
          "latitude": {
            "description": "Array of latitude coordinates extracted from EXIF GPS data",
            "items": {
              "nullable": true,
              "type": "number"
            },
            "type": "array"
          },
          "livePhotoVideoId": {
            "description": "Array of live photo video asset IDs (null for non-live photos)",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "type": "array"
          },
          "localOffsetHours": {
            "description": "Array of UTC offset hours at the time each photo was taken. Positive values are east of UTC, negative values are west of UTC. Values may be fractional (e.g., 5.5 for +05:30, -9.75 for -09:45). Applying this offset to 'fileCreatedAt' will give you the time the photo was taken from the photographer's perspective.",
            "items": {
              "type": "number"
            },
            "type": "array"
          },
          "longitude": {
            "description": "Array of longitude coordinates extracted from EXIF GPS data",
            "items": {
              "nullable": true,
              "type": "number"
            },
            "type": "array"
          },
          "ownerId": {
            "description": "Array of owner IDs for each asset",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "projectionType": {
            "description": "Array of projection types for 360° content (e.g., \"EQUIRECTANGULAR\", \"CUBEFACE\", \"CYLINDRICAL\")",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "type": "array"
          },
          "ratio": {
            "description": "Array of aspect ratios (width/height) for each asset",
            "items": {
              "type": "number"
            },
            "type": "array"
          },
          "stack": {
            "description": "Array of stack information as [stackId, assetCount] tuples (null for non-stacked assets)",
            "items": {
              "items": {
                "type": "string"
              },
              "maxItems": 2,
              "minItems": 2,
              "nullable": true,
              "type": "array"
            },
            "type": "array"
          },
          "thumbhash": {
            "description": "Array of BlurHash strings for generating asset previews (base64 encoded)",
            "items": {
              "nullable": true,
              "type": "string"
            },
            "type": "array"
          },
          "visibility": {
            "description": "Array of visibility statuses for each asset (e.g., ARCHIVE, TIMELINE, HIDDEN, LOCKED)",
            "items": {
              "$ref": "#/components/schemas/AssetVisibility"
            },
            "type": "array"
          }
        },
        "required": [
          "city",
          "country",
          "duration",
          "fileCreatedAt",
          "id",
          "isFavorite",
          "isImage",
          "isTrashed",
          "livePhotoVideoId",
          "localOffsetHours",
          "ownerId",
          "projectionType",
          "ratio",
          "stack",
          "thumbhash",
          "visibility"
        ],
        "type": "object"
      },
      "UpdateAlbumDto": {
        "properties": {
          "albumThumbnailAssetId": {
            "format": "uuid",
            "type": "string"
          },
          "isActivityEnabled": {
            "type": "boolean"
          },
          "order": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AssetOrder"
              }
            ]
          }
        },
        "required": [
          "albumThumbnailAssetId",
          "isActivityEnabled",
          "order"
        ],
        "type": "object"
      },
      "UpdateAlbumUserDto": {
        "properties": {
          "role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AlbumUserRole"
              }
            ]
          }
        },
        "required": [
          "role"
        ],
        "type": "object"
      },
      "UpdateAssetDto": {
        "properties": {
          "isFavorite": {
            "type": "boolean"
          },
          "livePhotoVideoId": {
            "format": "uuid",
            "type": "object"
          },
          "visibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AssetVisibility"
              }
            ]
          }
        },
        "required": [
          "isFavorite",
          "livePhotoVideoId",
          "visibility"
        ],
        "type": "object"
      },
      "UpdateLibraryDto": {
        "properties": {},
        "type": "object"
      },
      "UserAdminCreateDto": {
        "properties": {
          "avatarColor": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserAvatarColor"
              }
            ]
          },
          "isAdmin": {
            "type": "boolean"
          },
          "notify": {
            "type": "boolean"
          },
          "quotaSizeInBytes": {
            "format": "int64",
            "type": "integer"
          },
          "shouldChangePassword": {
            "type": "boolean"
          }
        },
        "required": [
          "avatarColor",
          "isAdmin",
          "notify",
          "quotaSizeInBytes",
          "shouldChangePassword"
        ],
        "type": "object"
      },
      "UserAdminDeleteDto": {
        "properties": {
          "force": {
            "type": "boolean"
          }
        },
        "required": [
          "force"
        ],
        "type": "object"
      },
      "UserAdminUpdateDto": {
        "properties": {
          "avatarColor": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserAvatarColor"
              }
            ]
          },
          "isAdmin": {
            "type": "boolean"
          },
          "pinCode": {
            "example": "123456",
            "type": "object"
          },
          "quotaSizeInBytes": {
            "format": "int64",
            "type": "integer"
          },
          "shouldChangePassword": {
            "type": "boolean"
          }
        },
        "required": [
          "avatarColor",
          "isAdmin",
          "pinCode",
          "quotaSizeInBytes",
          "shouldChangePassword"
        ],
        "type": "object"
      },
      "UserAvatarColor": {
        "enum": [
          "primary",
          "pink",
          "red",
          "yellow",
          "blue",
          "green",
          "purple",
          "orange",
          "gray",
          "amber"
        ],
        "type": "string"
      },
      "UserMetadataKey": {
        "enum": [
          "preferences",
          "license",
          "onboarding"
        ],
        "type": "string"
      },
      "UserPreferencesUpdateDto": {
        "properties": {},
        "type": "object"
      },
      "UserUpdateMeDto": {
        "properties": {
          "avatarColor": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserAvatarColor"
              }
            ]
          }
        },
        "required": [
          "avatarColor"
        ],
        "type": "object"
      },
      "ValidateLibraryDto": {
        "properties": {},
        "type": "object"
      },
      "VideoCodec": {
        "enum": [
          "h264",
          "hevc",
          "vp9",
          "av1"
        ],
        "type": "string"
      }
    }
  }
}