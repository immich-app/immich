# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

formatter:  
  page_width: 120

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at
  # https://dart.dev/tools/linter-rules
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.

  rules:
    # avoid_print: false  # Uncomment to disable the `avoid_print` rule
    # prefer_single_quotes: true # Uncomment to enable the `prefer_single_quotes` rule
    unawaited_futures: true
    use_build_context_synchronously: false
    require_trailing_commas: true
    unrelated_type_equality_checks: true
    prefer_const_constructors: true

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
analyzer:
  exclude:
    - openapi/**
    - build/**
    - lib/generated_plugin_registrant.dart
    - lib/**/*.g.dart
    - lib/**/*.drift.dart

  # TODO: Re-enable after upgrading custom_lint
  # plugins:
  #   - custom_lint
  errors:
    unawaited_futures: warning

custom_lint:
  debug: true
  rules:
    - avoid_build_context_in_providers: false
    - avoid_public_notifier_properties: false
    - avoid_manual_providers_as_generated_provider_dependency: false
    - unsupported_provider_value: false
    - import_rule_photo_manager:
      message: photo_manager must only be used in MediaRepositories
      restrict: package:photo_manager
      allowed:
        # required / wanted
        - 'lib/infrastructure/repositories/album_media.repository.dart'
        - 'lib/infrastructure/repositories/{storage,asset_media}.repository.dart'
        - 'lib/repositories/{album,asset,file}_media.repository.dart'
        # acceptable exceptions for the time being
        - lib/entities/asset.entity.dart # to provide local AssetEntity for now
        - lib/providers/image/immich_local_{image,thumbnail}_provider.dart # accesses thumbnails via PhotoManager
        # refactor to make the providers and services testable
        - lib/providers/backup/{backup,manual_upload}.provider.dart # uses only PMProgressHandler
        - lib/services/{background,backup}.service.dart # uses only PMProgressHandler
        - test/**.dart
    - import_rule_isar:
      message: isar must only be used in entities and repositories
      restrict: package:isar
      allowed:
        # required / wanted
        - lib/entities/*.entity.dart
        - lib/repositories/{album,asset,backup,database,etag,exif_info,user,timeline,partner}.repository.dart
        - lib/infrastructure/entities/*.entity.dart
        - lib/infrastructure/repositories/*.repository.dart
        - lib/providers/infrastructure/db.provider.dart
        # acceptable exceptions for the time being (until Isar is fully replaced)
        - lib/providers/app_life_cycle.provider.dart
        - integration_test/test_utils/general_helper.dart
        - lib/domain/services/background_worker.service.dart
        - lib/main.dart
        - lib/pages/album/album_asset_selection.page.dart
        - lib/routing/router.dart
        - lib/services/immich_logger.service.dart # not really a service... more a util
        - lib/utils/{db,migration}.dart
        - lib/utils/bootstrap.dart
        - lib/widgets/asset_grid/asset_grid_data_structure.dart
        - test/**.dart
        # refactor the remaining providers
        - lib/providers/db.provider.dart

    - import_rule_openapi:
      message: openapi must only be used through ApiRepositories
      restrict: package:openapi
      allowed:
        # required / wanted
        - lib/repositories/*_api.repository.dart
        - lib/domain/models/sync_event.model.dart
        - lib/{domain,infrastructure}/**/sync_stream.*
        - lib/{domain,infrastructure}/**/sync_api.*
        - lib/infrastructure/repositories/*_api.repository.dart
        - lib/infrastructure/utils/*.converter.dart
        # acceptable exceptions for the time being
        - lib/entities/{album,asset,exif_info,user}.entity.dart # to convert DTOs to entities
        - lib/infrastructure/utils/*.converter.dart
        - lib/utils/{image_url_builder,openapi_patching}.dart # utils are fine
        - test/modules/utils/openapi_patching_test.dart # filename is self-explanatory...
        - lib/domain/services/sync_stream.service.dart # Making sure to comply with the type from database
        - lib/domain/services/search.service.dart

        # refactor
        - lib/models/map/map_marker.model.dart
        - lib/models/server_info/server_{config,disk_info,features,version}.model.dart
        - lib/models/shared_link/shared_link.model.dart
        - lib/providers/asset_viewer/asset_people.provider.dart
        - lib/providers/auth.provider.dart
        - lib/providers/image/immich_remote_{image,thumbnail}_provider.dart
        - lib/providers/map/map_state.provider.dart
        - lib/providers/search/{search,search_filter}.provider.dart
        - lib/providers/websocket.provider.dart
        - lib/routing/auth_guard.dart
        - lib/services/{api,asset,backup,memory,oauth,search,shared_link,stack,trash}.service.dart
        - lib/widgets/album/album_thumbnail_listtile.dart
        - lib/widgets/forms/login/login_form.dart
        - lib/widgets/search/search_filter/{camera_picker,location_picker,people_picker}.dart
        - lib/services/auth.service.dart # on ApiException
        - test/services/auth.service_test.dart # on ApiException
        # allow import from test
        - test/**.dart

dart_code_metrics:
  rules:
    - banned-usage:
        entries:
          - name: debugPrint
            description: Use dPrint instead of debugPrint for proper tree-shaking in release builds.
            exclude-paths:
              - 'lib/utils/debug_print.dart'
            severity: perf
    # All rules from "recommended" preset
    # Show potential errors
  #  - avoid-cascade-after-if-null
  #  - avoid-collection-methods-with-unrelated-types
  #  - avoid-duplicate-exports
  #  - avoid-dynamic
  #  - avoid-missing-enum-constant-in-map
  #  - avoid-passing-async-when-sync-expected
  #  - avoid-throw-in-catch-block
    - avoid-unused-parameters
    - prefer-const-border-radius
    - prefer-declaring-const-constructor
    - prefer-switch-expression
